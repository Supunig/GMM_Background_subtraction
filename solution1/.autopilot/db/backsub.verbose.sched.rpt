

================================================================
== Vivado HLS Report for 'backsub'
================================================================
* Date:           Sun Nov 19 18:26:42 2017

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        Background_Subtraction_with_GMM
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.46|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+--------+--------+----------+-----------+-----------+-------+----------+
        |             |     Latency     | Iteration|  Initiation Interval  |  Trip |          |
        |  Loop Name  |   min  |   max  |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------+--------+--------+----------+-----------+-----------+-------+----------+
        |- Loop 1     |  153600|  153600|         2|          -|          -|  76800|    no    |
        |- Loop 2     |       ?|       ?|         ?|          -|          -|    240|    no    |
        | + Loop 2.1  |       ?|       ?|         ?|          -|          -|    160|    no    |
        |- Loop 3     |       ?|       ?|         ?|          -|          -|    240|    no    |
        | + Loop 3.1  |       ?|       ?|         ?|          -|          -|    160|    no    |
        +-------------+--------+--------+----------+-----------+-----------+-------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 15
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (!init_read)
	8  / (init_read)
2 --> 
	10  / (exitcond1)
	3  / (!exitcond1)
3 --> 
	2  / (exitcond)
	4  / (!exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	3  / true
8 --> 
	9  / (!exitcond4)
	10  / (exitcond4)
9 --> 
	8  / true
10 --> 
	11  / (init_read & !exitcond3)
11 --> 
	10  / (exitcond2)
	12  / (!exitcond2)
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	11  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_16 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([38400 x i32]* %data_array) nounwind, !map !63

ST_1: stg_17 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([76800 x i8]* %out_frame) nounwind, !map !69

ST_1: stg_18 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i1 %init) nounwind, !map !74

ST_1: stg_19 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !80

ST_1: stg_20 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @str) nounwind

ST_1: init_read [1/1] 0.00ns
:5  %init_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %init) nounwind

ST_1: stg_22 [1/1] 1.57ns
:6  br i1 %init_read, label %.preheader9, label %.preheader5


 <State 2>: 2.00ns
ST_2: idxRow2 [1/1] 0.00ns
.preheader5:0  %idxRow2 = phi i8 [ 0, %0 ], [ %idxRow_1, %.preheader ]

ST_2: exitcond1 [1/1] 2.00ns
.preheader5:1  %exitcond1 = icmp eq i8 %idxRow2, -16

ST_2: empty_12 [1/1] 0.00ns
.preheader5:2  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 240, i64 240, i64 240) nounwind

ST_2: idxRow_1 [1/1] 1.72ns
.preheader5:3  %idxRow_1 = add i8 %idxRow2, 1

ST_2: stg_27 [1/1] 0.00ns
.preheader5:4  br i1 %exitcond1, label %.loopexit, label %.preheader.preheader

ST_2: p_shl1 [1/1] 0.00ns
.preheader.preheader:0  %p_shl1 = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %idxRow2, i8 0)

ST_2: p_shl1_cast [1/1] 0.00ns
.preheader.preheader:1  %p_shl1_cast = zext i16 %p_shl1 to i17

ST_2: p_shl2 [1/1] 0.00ns
.preheader.preheader:2  %p_shl2 = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %idxRow2, i6 0)

ST_2: p_shl2_cast [1/1] 0.00ns
.preheader.preheader:3  %p_shl2_cast = zext i14 %p_shl2 to i17

ST_2: tmp_2 [1/1] 1.96ns
.preheader.preheader:4  %tmp_2 = add i17 %p_shl1_cast, %p_shl2_cast

ST_2: p_lshr_f1_cast [1/1] 0.00ns
.preheader.preheader:5  %p_lshr_f1_cast = call i16 @_ssdm_op_PartSelect.i16.i17.i32.i32(i17 %tmp_2, i32 1, i32 16)

ST_2: stg_34 [1/1] 1.57ns
.preheader.preheader:6  br label %.preheader


 <State 3>: 4.35ns
ST_3: idxCols3 [1/1] 0.00ns
.preheader:0  %idxCols3 = phi i8 [ 0, %.preheader.preheader ], [ %idxCols_1, %3 ]

ST_3: idxCols3_cast2 [1/1] 0.00ns
.preheader:1  %idxCols3_cast2 = zext i8 %idxCols3 to i16

ST_3: exitcond [1/1] 2.00ns
.preheader:2  %exitcond = icmp eq i8 %idxCols3, -96

ST_3: empty_13 [1/1] 0.00ns
.preheader:3  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 160, i64 160, i64 160) nounwind

ST_3: idxCols_1 [1/1] 1.72ns
.preheader:4  %idxCols_1 = add i8 %idxCols3, 1

ST_3: stg_40 [1/1] 0.00ns
.preheader:5  br i1 %exitcond, label %.preheader5, label %3

ST_3: i_2 [1/1] 1.96ns
:0  %i_2 = add i16 %idxCols3_cast2, %p_lshr_f1_cast

ST_3: tmp_7 [1/1] 0.00ns
:1  %tmp_7 = zext i16 %i_2 to i64

ST_3: data_array_addr [1/1] 0.00ns
:2  %data_array_addr = getelementptr [38400 x i32]* %data_array, i64 0, i64 %tmp_7

ST_3: val_1 [2/2] 2.39ns
:3  %val_1 = load i32* %data_array_addr, align 4


 <State 4>: 3.43ns
ST_4: val_1 [1/2] 2.39ns
:3  %val_1 = load i32* %data_array_addr, align 4

ST_4: pix_y1 [1/1] 0.00ns
:4  %pix_y1 = trunc i32 %val_1 to i8

ST_4: pix_y2 [1/1] 0.00ns
:5  %pix_y2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %val_1, i32 16, i32 23)

ST_4: tmp_8 [1/1] 0.00ns
:6  %tmp_8 = call i17 @_ssdm_op_BitConcatenate.i17.i16.i1(i16 %i_2, i1 false)

ST_4: tmp_3 [2/2] 1.04ns
:7  %tmp_3 = call fastcc zeroext i1 @backsub_EM_ALGO(i8 zeroext %pix_y1, i17 %tmp_8, [307200 x float]* nocapture @mean, [307200 x float]* nocapture @sigma, [307200 x float]* nocapture @weight, [307200 x i8]* nocapture @matchsum, [307200 x i1]* nocapture @back_gauss) nounwind


 <State 5>: 5.33ns
ST_5: tmp_3 [1/2] 1.57ns
:7  %tmp_3 = call fastcc zeroext i1 @backsub_EM_ALGO(i8 zeroext %pix_y1, i17 %tmp_8, [307200 x float]* nocapture @mean, [307200 x float]* nocapture @sigma, [307200 x float]* nocapture @weight, [307200 x i8]* nocapture @matchsum, [307200 x i1]* nocapture @back_gauss) nounwind

ST_5: tmp_s [1/1] 0.00ns
:8  %tmp_s = zext i17 %tmp_8 to i64

ST_5: out_frame_addr [1/1] 0.00ns
:9  %out_frame_addr = getelementptr [76800 x i8]* %out_frame, i64 0, i64 %tmp_s

ST_5: p_1 [1/1] 1.37ns
:10  %p_1 = select i1 %tmp_3, i8 -1, i8 0

ST_5: stg_54 [1/1] 2.39ns
:11  store i8 %p_1, i8* %out_frame_addr, align 1


 <State 6>: 1.04ns
ST_6: tmp_12 [1/1] 0.00ns
:12  %tmp_12 = or i17 %tmp_8, 1

ST_6: tmp_13 [2/2] 1.04ns
:13  %tmp_13 = call fastcc zeroext i1 @backsub_EM_ALGO(i8 zeroext %pix_y2, i17 %tmp_12, [307200 x float]* nocapture @mean, [307200 x float]* nocapture @sigma, [307200 x float]* nocapture @weight, [307200 x i8]* nocapture @matchsum, [307200 x i1]* nocapture @back_gauss) nounwind


 <State 7>: 5.33ns
ST_7: tmp_13 [1/2] 1.57ns
:13  %tmp_13 = call fastcc zeroext i1 @backsub_EM_ALGO(i8 zeroext %pix_y2, i17 %tmp_12, [307200 x float]* nocapture @mean, [307200 x float]* nocapture @sigma, [307200 x float]* nocapture @weight, [307200 x i8]* nocapture @matchsum, [307200 x i1]* nocapture @back_gauss) nounwind

ST_7: tmp_16 [1/1] 0.00ns
:14  %tmp_16 = zext i17 %tmp_12 to i64

ST_7: out_frame_addr_2 [1/1] 0.00ns
:15  %out_frame_addr_2 = getelementptr [76800 x i8]* %out_frame, i64 0, i64 %tmp_16

ST_7: p_2 [1/1] 1.37ns
:16  %p_2 = select i1 %tmp_13, i8 -1, i8 0

ST_7: stg_61 [1/1] 2.39ns
:17  store i8 %p_2, i8* %out_frame_addr_2, align 1

ST_7: stg_62 [1/1] 0.00ns
:18  br label %.preheader


 <State 8>: 3.87ns
ST_8: i [1/1] 0.00ns
.preheader9:0  %i = phi i17 [ %i_1, %1 ], [ 0, %0 ]

ST_8: exitcond4 [1/1] 2.30ns
.preheader9:1  %exitcond4 = icmp eq i17 %i, -54272

ST_8: empty [1/1] 0.00ns
.preheader9:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 76800, i64 76800, i64 76800) nounwind

ST_8: i_1 [1/1] 2.08ns
.preheader9:3  %i_1 = add i17 %i, 1

ST_8: stg_67 [1/1] 1.57ns
.preheader9:4  br i1 %exitcond4, label %.preheader7, label %1

ST_8: tmp [1/1] 0.00ns
:0  %tmp = call i19 @_ssdm_op_BitConcatenate.i19.i17.i2(i17 %i, i2 0)

ST_8: tmp_1 [1/1] 0.00ns
:1  %tmp_1 = zext i19 %tmp to i64

ST_8: mean_addr [1/1] 0.00ns
:2  %mean_addr = getelementptr [307200 x float]* @mean, i64 0, i64 %tmp_1

ST_8: stg_71 [1/1] 2.39ns
:3  store float 3.200000e+01, float* %mean_addr, align 16

ST_8: tmp_11 [1/1] 0.00ns
:4  %tmp_11 = or i19 %tmp, 1

ST_8: mean_addr1 [1/1] 0.00ns
:5  %mean_addr1 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 0, i19 %tmp_11)

ST_8: tmp_17 [1/1] 0.00ns
:6  %tmp_17 = zext i32 %mean_addr1 to i64

ST_8: mean_addr_1 [1/1] 0.00ns
:7  %mean_addr_1 = getelementptr [307200 x float]* @mean, i64 0, i64 %tmp_17

ST_8: stg_76 [1/1] 2.39ns
:8  store float 1.200000e+02, float* %mean_addr_1, align 4

ST_8: sigma_addr [1/1] 0.00ns
:19  %sigma_addr = getelementptr [307200 x float]* @sigma, i64 0, i64 %tmp_1

ST_8: stg_78 [1/1] 2.39ns
:20  store float 4.000000e+02, float* %sigma_addr, align 16

ST_8: sigma_addr_1 [1/1] 0.00ns
:21  %sigma_addr_1 = getelementptr [307200 x float]* @sigma, i64 0, i64 %tmp_17

ST_8: stg_80 [1/1] 2.39ns
:22  store float 4.000000e+02, float* %sigma_addr_1, align 4

ST_8: weight_addr [1/1] 0.00ns
:27  %weight_addr = getelementptr [307200 x float]* @weight, i64 0, i64 %tmp_1

ST_8: stg_82 [1/1] 2.39ns
:28  store float 0x3FA99999A0000000, float* %weight_addr, align 16

ST_8: weight_addr_1 [1/1] 0.00ns
:29  %weight_addr_1 = getelementptr [307200 x float]* @weight, i64 0, i64 %tmp_17

ST_8: stg_84 [1/1] 2.39ns
:30  store float 0x3FA99999A0000000, float* %weight_addr_1, align 4

ST_8: matchsum_addr [1/1] 0.00ns
:35  %matchsum_addr = getelementptr [307200 x i8]* @matchsum, i64 0, i64 %tmp_1

ST_8: stg_86 [1/1] 2.39ns
:36  store i8 0, i8* %matchsum_addr, align 4

ST_8: matchsum_addr_1 [1/1] 0.00ns
:37  %matchsum_addr_1 = getelementptr [307200 x i8]* @matchsum, i64 0, i64 %tmp_17

ST_8: stg_88 [1/1] 2.39ns
:38  store i8 0, i8* %matchsum_addr_1, align 1

ST_8: back_gauss_addr [1/1] 0.00ns
:43  %back_gauss_addr = getelementptr [307200 x i1]* @back_gauss, i64 0, i64 %tmp_1

ST_8: stg_90 [1/1] 2.39ns
:44  store i1 true, i1* %back_gauss_addr, align 4

ST_8: back_gauss_addr_1 [1/1] 0.00ns
:45  %back_gauss_addr_1 = getelementptr [307200 x i1]* @back_gauss, i64 0, i64 %tmp_17

ST_8: stg_92 [1/1] 2.39ns
:46  store i1 true, i1* %back_gauss_addr_1, align 1


 <State 9>: 2.39ns
ST_9: tmp_19 [1/1] 0.00ns
:9  %tmp_19 = or i19 %tmp, 2

ST_9: mean_addr2 [1/1] 0.00ns
:10  %mean_addr2 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 0, i19 %tmp_19)

ST_9: tmp_20 [1/1] 0.00ns
:11  %tmp_20 = zext i32 %mean_addr2 to i64

ST_9: mean_addr_2 [1/1] 0.00ns
:12  %mean_addr_2 = getelementptr [307200 x float]* @mean, i64 0, i64 %tmp_20

ST_9: stg_97 [1/1] 2.39ns
:13  store float 1.800000e+02, float* %mean_addr_2, align 8

ST_9: tmp_21 [1/1] 0.00ns
:14  %tmp_21 = or i19 %tmp, 3

ST_9: mean_addr3 [1/1] 0.00ns
:15  %mean_addr3 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 0, i19 %tmp_21)

ST_9: tmp_22 [1/1] 0.00ns
:16  %tmp_22 = zext i32 %mean_addr3 to i64

ST_9: mean_addr_3 [1/1] 0.00ns
:17  %mean_addr_3 = getelementptr [307200 x float]* @mean, i64 0, i64 %tmp_22

ST_9: stg_102 [1/1] 2.39ns
:18  store float 2.200000e+02, float* %mean_addr_3, align 4

ST_9: sigma_addr_2 [1/1] 0.00ns
:23  %sigma_addr_2 = getelementptr [307200 x float]* @sigma, i64 0, i64 %tmp_20

ST_9: stg_104 [1/1] 2.39ns
:24  store float 4.000000e+02, float* %sigma_addr_2, align 8

ST_9: sigma_addr_3 [1/1] 0.00ns
:25  %sigma_addr_3 = getelementptr [307200 x float]* @sigma, i64 0, i64 %tmp_22

ST_9: stg_106 [1/1] 2.39ns
:26  store float 4.000000e+02, float* %sigma_addr_3, align 4

ST_9: weight_addr_2 [1/1] 0.00ns
:31  %weight_addr_2 = getelementptr [307200 x float]* @weight, i64 0, i64 %tmp_20

ST_9: stg_108 [1/1] 2.39ns
:32  store float 0x3FA99999A0000000, float* %weight_addr_2, align 8

ST_9: weight_addr_3 [1/1] 0.00ns
:33  %weight_addr_3 = getelementptr [307200 x float]* @weight, i64 0, i64 %tmp_22

ST_9: stg_110 [1/1] 2.39ns
:34  store float 0x3FA99999A0000000, float* %weight_addr_3, align 4

ST_9: matchsum_addr_2 [1/1] 0.00ns
:39  %matchsum_addr_2 = getelementptr [307200 x i8]* @matchsum, i64 0, i64 %tmp_20

ST_9: stg_112 [1/1] 2.39ns
:40  store i8 0, i8* %matchsum_addr_2, align 2

ST_9: matchsum_addr_3 [1/1] 0.00ns
:41  %matchsum_addr_3 = getelementptr [307200 x i8]* @matchsum, i64 0, i64 %tmp_22

ST_9: stg_114 [1/1] 2.39ns
:42  store i8 0, i8* %matchsum_addr_3, align 1

ST_9: back_gauss_addr_2 [1/1] 0.00ns
:47  %back_gauss_addr_2 = getelementptr [307200 x i1]* @back_gauss, i64 0, i64 %tmp_20

ST_9: stg_116 [1/1] 2.39ns
:48  store i1 true, i1* %back_gauss_addr_2, align 2

ST_9: back_gauss_addr_3 [1/1] 0.00ns
:49  %back_gauss_addr_3 = getelementptr [307200 x i1]* @back_gauss, i64 0, i64 %tmp_22

ST_9: stg_118 [1/1] 2.39ns
:50  store i1 true, i1* %back_gauss_addr_3, align 1

ST_9: stg_119 [1/1] 0.00ns
:51  br label %.preheader9


 <State 10>: 2.00ns
ST_10: idxRow [1/1] 0.00ns
.preheader7:0  %idxRow = phi i8 [ 0, %.preheader9 ], [ %idxRow_2, %.preheader6 ]

ST_10: exitcond3 [1/1] 2.00ns
.preheader7:1  %exitcond3 = icmp eq i8 %idxRow, -16

ST_10: empty_10 [1/1] 0.00ns
.preheader7:2  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 240, i64 240, i64 240) nounwind

ST_10: idxRow_2 [1/1] 1.72ns
.preheader7:3  %idxRow_2 = add i8 %idxRow, 1

ST_10: stg_124 [1/1] 0.00ns
.preheader7:4  br i1 %exitcond3, label %.loopexit, label %.preheader6.preheader

ST_10: p_shl [1/1] 0.00ns
.preheader6.preheader:0  %p_shl = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %idxRow, i8 0)

ST_10: p_shl_cast [1/1] 0.00ns
.preheader6.preheader:1  %p_shl_cast = zext i16 %p_shl to i17

ST_10: p_shl3 [1/1] 0.00ns
.preheader6.preheader:2  %p_shl3 = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %idxRow, i6 0)

ST_10: p_shl3_cast [1/1] 0.00ns
.preheader6.preheader:3  %p_shl3_cast = zext i14 %p_shl3 to i17

ST_10: tmp_4 [1/1] 1.96ns
.preheader6.preheader:4  %tmp_4 = add i17 %p_shl_cast, %p_shl3_cast

ST_10: p_lshr_f_cast [1/1] 0.00ns
.preheader6.preheader:5  %p_lshr_f_cast = call i16 @_ssdm_op_PartSelect.i16.i17.i32.i32(i17 %tmp_4, i32 1, i32 16)

ST_10: stg_131 [1/1] 1.57ns
.preheader6.preheader:6  br label %.preheader6

ST_10: stg_132 [1/1] 0.00ns
.loopexit:0  ret i32 0


 <State 11>: 4.35ns
ST_11: idxCols [1/1] 0.00ns
.preheader6:0  %idxCols = phi i8 [ 0, %.preheader6.preheader ], [ %idxCols_2, %2 ]

ST_11: idxCols_cast6 [1/1] 0.00ns
.preheader6:1  %idxCols_cast6 = zext i8 %idxCols to i16

ST_11: exitcond2 [1/1] 2.00ns
.preheader6:2  %exitcond2 = icmp eq i8 %idxCols, -96

ST_11: empty_11 [1/1] 0.00ns
.preheader6:3  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 160, i64 160, i64 160) nounwind

ST_11: idxCols_2 [1/1] 1.72ns
.preheader6:4  %idxCols_2 = add i8 %idxCols, 1

ST_11: stg_138 [1/1] 0.00ns
.preheader6:5  br i1 %exitcond2, label %.preheader7, label %2

ST_11: i_3 [1/1] 1.96ns
:0  %i_3 = add i16 %idxCols_cast6, %p_lshr_f_cast

ST_11: tmp_6 [1/1] 0.00ns
:1  %tmp_6 = zext i16 %i_3 to i64

ST_11: data_array_addr_1 [1/1] 0.00ns
:2  %data_array_addr_1 = getelementptr [38400 x i32]* %data_array, i64 0, i64 %tmp_6

ST_11: val [2/2] 2.39ns
:3  %val = load i32* %data_array_addr_1, align 4


 <State 12>: 3.43ns
ST_12: val [1/2] 2.39ns
:3  %val = load i32* %data_array_addr_1, align 4

ST_12: pix_y1_1 [1/1] 0.00ns
:4  %pix_y1_1 = trunc i32 %val to i8

ST_12: pix_y2_1 [1/1] 0.00ns
:5  %pix_y2_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %val, i32 16, i32 23)

ST_12: tmp_5 [1/1] 0.00ns
:6  %tmp_5 = call i17 @_ssdm_op_BitConcatenate.i17.i16.i1(i16 %i_3, i1 false)

ST_12: tmp_9 [2/2] 1.04ns
:7  %tmp_9 = call fastcc zeroext i1 @backsub_EM_ALGO(i8 zeroext %pix_y1_1, i17 %tmp_5, [307200 x float]* nocapture @mean, [307200 x float]* nocapture @sigma, [307200 x float]* nocapture @weight, [307200 x i8]* nocapture @matchsum, [307200 x i1]* nocapture @back_gauss) nounwind


 <State 13>: 5.33ns
ST_13: tmp_9 [1/2] 1.57ns
:7  %tmp_9 = call fastcc zeroext i1 @backsub_EM_ALGO(i8 zeroext %pix_y1_1, i17 %tmp_5, [307200 x float]* nocapture @mean, [307200 x float]* nocapture @sigma, [307200 x float]* nocapture @weight, [307200 x i8]* nocapture @matchsum, [307200 x i1]* nocapture @back_gauss) nounwind

ST_13: tmp_10 [1/1] 0.00ns
:8  %tmp_10 = zext i17 %tmp_5 to i64

ST_13: out_frame_addr_1 [1/1] 0.00ns
:9  %out_frame_addr_1 = getelementptr [76800 x i8]* %out_frame, i64 0, i64 %tmp_10

ST_13: p_s [1/1] 1.37ns
:10  %p_s = select i1 %tmp_9, i8 -1, i8 0

ST_13: stg_152 [1/1] 2.39ns
:11  store i8 %p_s, i8* %out_frame_addr_1, align 1


 <State 14>: 1.04ns
ST_14: tmp_14 [1/1] 0.00ns
:12  %tmp_14 = or i17 %tmp_5, 1

ST_14: tmp_15 [2/2] 1.04ns
:13  %tmp_15 = call fastcc zeroext i1 @backsub_EM_ALGO(i8 zeroext %pix_y2_1, i17 %tmp_14, [307200 x float]* nocapture @mean, [307200 x float]* nocapture @sigma, [307200 x float]* nocapture @weight, [307200 x i8]* nocapture @matchsum, [307200 x i1]* nocapture @back_gauss) nounwind


 <State 15>: 5.33ns
ST_15: tmp_15 [1/2] 1.57ns
:13  %tmp_15 = call fastcc zeroext i1 @backsub_EM_ALGO(i8 zeroext %pix_y2_1, i17 %tmp_14, [307200 x float]* nocapture @mean, [307200 x float]* nocapture @sigma, [307200 x float]* nocapture @weight, [307200 x i8]* nocapture @matchsum, [307200 x i1]* nocapture @back_gauss) nounwind

ST_15: tmp_18 [1/1] 0.00ns
:14  %tmp_18 = zext i17 %tmp_14 to i64

ST_15: out_frame_addr_3 [1/1] 0.00ns
:15  %out_frame_addr_3 = getelementptr [76800 x i8]* %out_frame, i64 0, i64 %tmp_18

ST_15: p_3 [1/1] 1.37ns
:16  %p_3 = select i1 %tmp_15, i8 -1, i8 0

ST_15: stg_159 [1/1] 2.39ns
:17  store i8 %p_3, i8* %out_frame_addr_3, align 1

ST_15: stg_160 [1/1] 0.00ns
:18  br label %.preheader6



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
