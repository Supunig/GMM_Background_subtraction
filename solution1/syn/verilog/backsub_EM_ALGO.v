// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module backsub_EM_ALGO (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pixel,
        pos_r,
        mean_address0,
        mean_ce0,
        mean_we0,
        mean_d0,
        mean_q0,
        sigma_address0,
        sigma_ce0,
        sigma_we0,
        sigma_d0,
        sigma_q0,
        weight_address0,
        weight_ce0,
        weight_we0,
        weight_d0,
        weight_q0,
        matchsum_address0,
        matchsum_ce0,
        matchsum_we0,
        matchsum_d0,
        matchsum_q0,
        back_gauss_address0,
        back_gauss_ce0,
        back_gauss_we0,
        back_gauss_d0,
        back_gauss_q0,
        back_gauss_address1,
        back_gauss_ce1,
        back_gauss_we1,
        back_gauss_d1,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 133'b1;
parameter    ap_ST_st2_fsm_1 = 133'b10;
parameter    ap_ST_st3_fsm_2 = 133'b100;
parameter    ap_ST_st4_fsm_3 = 133'b1000;
parameter    ap_ST_st5_fsm_4 = 133'b10000;
parameter    ap_ST_st6_fsm_5 = 133'b100000;
parameter    ap_ST_st7_fsm_6 = 133'b1000000;
parameter    ap_ST_st8_fsm_7 = 133'b10000000;
parameter    ap_ST_st9_fsm_8 = 133'b100000000;
parameter    ap_ST_st10_fsm_9 = 133'b1000000000;
parameter    ap_ST_st11_fsm_10 = 133'b10000000000;
parameter    ap_ST_st12_fsm_11 = 133'b100000000000;
parameter    ap_ST_st13_fsm_12 = 133'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 133'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 133'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 133'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 133'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 133'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 133'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 133'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 133'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 133'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 133'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 133'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 133'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 133'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 133'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 133'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 133'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 133'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 133'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 133'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 133'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 133'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 133'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 133'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 133'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 133'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 133'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 133'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 133'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 133'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 133'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 133'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 133'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 133'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 133'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 133'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 133'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 133'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 133'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 133'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 133'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 133'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 133'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 133'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 133'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 133'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 133'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 133'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 133'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 133'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 133'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 133'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 133'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 133'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 133'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 133'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 133'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_127 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_128 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_129 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_130 = 133'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_131 = 133'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_132 = 133'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_6E = 32'b1101110;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_66 = 32'b1100110;
parameter    ap_const_lv32_6B = 32'b1101011;
parameter    ap_const_lv32_73 = 32'b1110011;
parameter    ap_const_lv32_83 = 32'b10000011;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv32_6D = 32'b1101101;
parameter    ap_const_lv32_75 = 32'b1110101;
parameter    ap_const_lv32_76 = 32'b1110110;
parameter    ap_const_lv32_77 = 32'b1110111;
parameter    ap_const_lv32_78 = 32'b1111000;
parameter    ap_const_lv32_79 = 32'b1111001;
parameter    ap_const_lv32_7A = 32'b1111010;
parameter    ap_const_lv32_7B = 32'b1111011;
parameter    ap_const_lv32_7C = 32'b1111100;
parameter    ap_const_lv32_7E = 32'b1111110;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_447A0000 = 32'b1000100011110100000000000000000;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_6C = 32'b1101100;
parameter    ap_const_lv32_74 = 32'b1110100;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_7D = 32'b1111101;
parameter    ap_const_lv32_84 = 32'b10000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_3D8F5C29 = 32'b111101100011110101110000101001;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_67 = 32'b1100111;
parameter    ap_const_lv32_6F = 32'b1101111;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_3F333333 = 32'b111111001100110011001100110011;
parameter    ap_const_lv64_4004000000000000 = 64'b100000000000100000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv19_1 = 19'b1;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv19_2 = 19'b10;
parameter    ap_const_lv19_3 = 19'b11;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] pixel;
input  [16:0] pos_r;
output  [18:0] mean_address0;
output   mean_ce0;
output   mean_we0;
output  [31:0] mean_d0;
input  [31:0] mean_q0;
output  [18:0] sigma_address0;
output   sigma_ce0;
output   sigma_we0;
output  [31:0] sigma_d0;
input  [31:0] sigma_q0;
output  [18:0] weight_address0;
output   weight_ce0;
output   weight_we0;
output  [31:0] weight_d0;
input  [31:0] weight_q0;
output  [18:0] matchsum_address0;
output   matchsum_ce0;
output   matchsum_we0;
output  [7:0] matchsum_d0;
input  [7:0] matchsum_q0;
output  [18:0] back_gauss_address0;
output   back_gauss_ce0;
output   back_gauss_we0;
output  [0:0] back_gauss_d0;
input  [0:0] back_gauss_q0;
output  [18:0] back_gauss_address1;
output   back_gauss_ce1;
output   back_gauss_we1;
output  [0:0] back_gauss_d1;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[18:0] mean_address0;
reg mean_ce0;
reg mean_we0;
reg[31:0] mean_d0;
reg[18:0] sigma_address0;
reg sigma_ce0;
reg sigma_we0;
reg[31:0] sigma_d0;
reg[18:0] weight_address0;
reg weight_ce0;
reg weight_we0;
reg[31:0] weight_d0;
reg[18:0] matchsum_address0;
reg matchsum_ce0;
reg matchsum_we0;
reg[7:0] matchsum_d0;
reg[18:0] back_gauss_address0;
reg back_gauss_ce0;
reg back_gauss_we0;
reg[18:0] back_gauss_address1;
reg back_gauss_ce1;
reg back_gauss_we1;
reg[0:0] back_gauss_d1;
reg[0:0] ap_return;
(* fsm_encoding = "none" *) reg   [132:0] ap_CS_fsm = 133'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_151;
reg   [31:0] alpha_w = 32'b111011100000110001001001101111;
reg   [1:0] akt_address0;
reg    akt_ce0;
reg    akt_we0;
wire   [31:0] akt_d0;
wire   [31:0] akt_q0;
reg   [1:0] F_address0;
reg    F_ce0;
reg    F_we0;
wire   [31:0] F_d0;
wire   [31:0] F_q0;
reg   [31:0] vinit = 32'b1000011110010000000000000000000;
wire   [31:0] grp_fu_1034_p1;
reg   [31:0] reg_1083;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_233;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_240;
reg   [31:0] reg_1089;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_249;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_bdd_256;
reg   [31:0] reg_1095;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_bdd_265;
reg   [31:0] reg_1103;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_275;
reg    ap_sig_cseq_ST_st95_fsm_94;
reg    ap_sig_bdd_283;
reg   [31:0] reg_1111;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_292;
reg    ap_sig_cseq_ST_st111_fsm_110;
reg    ap_sig_bdd_301;
wire   [31:0] grp_fu_1001_p2;
reg   [31:0] reg_1119;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_311;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_318;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_bdd_326;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_bdd_334;
reg    ap_sig_cseq_ST_st85_fsm_84;
reg    ap_sig_bdd_342;
reg    ap_sig_cseq_ST_st90_fsm_89;
reg    ap_sig_bdd_350;
reg    ap_sig_cseq_ST_st99_fsm_98;
reg    ap_sig_bdd_358;
reg    ap_sig_cseq_ST_st103_fsm_102;
reg    ap_sig_bdd_366;
reg    ap_sig_cseq_ST_st108_fsm_107;
reg    ap_sig_bdd_374;
reg    ap_sig_cseq_ST_st116_fsm_115;
reg    ap_sig_bdd_382;
reg    ap_sig_cseq_ST_st132_fsm_131;
reg    ap_sig_bdd_390;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_400;
wire   [0:0] exitcond3_fu_1891_p2;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_412;
wire   [31:0] grp_fu_1010_p2;
reg   [31:0] reg_1138;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_422;
wire   [1:0] indvarinc_fu_1144_p2;
reg   [1:0] indvarinc_reg_3087;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_440;
wire   [0:0] tmp_s_fu_1170_p2;
reg   [0:0] tmp_s_reg_3092;
wire   [0:0] M_load_reg_3096;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_451;
wire   [0:0] M_1_load_reg_3101;
wire   [0:0] M_2_load_reg_3106;
wire   [0:0] M_3_load_reg_3111;
wire   [31:0] tmp_20_fu_1188_p1;
wire   [18:0] tmp_27_fu_1192_p3;
reg   [18:0] tmp_27_reg_3121;
wire   [31:0] p_addr6_fu_1199_p1;
reg   [31:0] p_addr6_reg_3129;
wire   [19:0] p_addr6_cast_fu_1203_p1;
reg   [19:0] p_addr6_cast_reg_3136;
wire   [2:0] j_1_fu_1213_p2;
reg   [2:0] j_1_reg_3147;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_477;
wire   [0:0] exitcond6_fu_1207_p2;
reg   [0:0] back_gauss_load_reg_3172;
reg   [0:0] p_Result_s_reg_3177;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_498;
wire   [31:0] p_Val2_3_fu_1356_p3;
reg   [31:0] p_Val2_3_reg_3182;
wire   [31:0] grp_fu_1053_p2;
reg   [31:0] tmp_i_reg_3188;
wire   [31:0] abs_fu_1387_p3;
reg   [31:0] abs_reg_3193;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_511;
wire   [63:0] tmp_24_fu_1037_p1;
reg   [63:0] tmp_24_reg_3198;
wire   [1:0] tmp_71_fu_1401_p1;
reg   [1:0] tmp_71_reg_3203;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_522;
wire   [63:0] grp_fu_1067_p1;
reg   [63:0] tmp_23_reg_3210;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_531;
wire   [63:0] grp_fu_1058_p2;
reg   [63:0] tmp_25_reg_3216;
wire   [0:0] tmp_9_fu_1481_p2;
reg   [0:0] tmp_9_reg_3222;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_542;
wire   [0:0] M_3_4_fu_1554_p2;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_551;
wire   [0:0] M_2_4_fu_1566_p2;
wire   [0:0] M_1_4_fu_1578_p2;
wire   [0:0] M_0_4_fu_1584_p2;
wire   [31:0] max_val_3_cast_fu_1590_p1;
reg   [31:0] max_val_3_cast_reg_3247;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_566;
wire   [2:0] j_2_fu_1600_p2;
reg   [2:0] j_2_reg_3256;
wire   [0:0] M_load_phi_fu_1649_p3;
reg   [0:0] M_load_phi_reg_3261;
wire   [0:0] exitcond5_fu_1594_p2;
wire   [0:0] icmp_fu_1667_p2;
reg   [0:0] icmp_reg_3273;
reg   [18:0] mean_addr_4_reg_3284;
reg   [18:0] sigma_addr_4_reg_3289;
reg   [18:0] weight_addr_reg_3294;
reg   [18:0] matchsum_addr_reg_3299;
reg   [31:0] max_F_4_reg_3304;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_599;
wire   [0:0] tmp_19_fu_1768_p2;
reg   [0:0] tmp_19_reg_3313;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_608;
wire   [0:0] tmp_53_fu_1816_p2;
reg   [0:0] tmp_53_reg_3318;
wire   [31:0] min_val_3_fu_1833_p3;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_619;
wire   [31:0] max_F_2_fu_1847_p3;
wire   [31:0] min_val_1_fu_1854_p3;
wire   [31:0] min_F_1_fu_1860_p3;
wire   [31:0] grp_fu_1031_p1;
reg   [31:0] tmp_48_reg_3344;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_bdd_634;
wire  signed [63:0] tmp_58_fu_1871_p1;
reg  signed [63:0] tmp_58_reg_3349;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_643;
wire   [2:0] j_4_fu_1897_p2;
reg   [2:0] j_4_reg_3358;
wire   [0:0] tmp_52_fu_1903_p2;
reg   [0:0] tmp_52_reg_3363;
reg   [18:0] weight_addr_8_reg_3367;
wire   [0:0] tmp_70_fu_1956_p2;
reg   [0:0] tmp_70_reg_3377;
reg   [7:0] matchsum_load_1_reg_3381;
wire   [31:0] tmp_61_fu_1962_p1;
reg   [31:0] akt_load_reg_3396;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_670;
reg   [31:0] tmp_44_reg_3401;
reg    ap_sig_cseq_ST_st98_fsm_97;
reg    ap_sig_bdd_678;
wire   [31:0] grp_fu_1005_p2;
reg   [31:0] tmp_46_reg_3406;
wire   [2:0] j_3_fu_1997_p2;
reg   [2:0] j_3_reg_3414;
reg    ap_sig_cseq_ST_st110_fsm_109;
reg    ap_sig_bdd_689;
wire   [0:0] tmp_50_fu_2003_p2;
reg   [0:0] tmp_50_reg_3419;
wire   [0:0] exitcond4_fu_1991_p2;
reg   [18:0] weight_addr_5_reg_3423;
wire   [2:0] i_4_fu_2025_p2;
reg   [2:0] i_4_reg_3431;
reg    ap_sig_cseq_ST_st118_fsm_117;
reg    ap_sig_bdd_708;
wire   [0:0] exitcond2_fu_2019_p2;
wire   [1:0] tmp_103_fu_2036_p1;
reg   [1:0] tmp_103_reg_3441;
wire   [31:0] sorted_F_3_2_fu_2071_p3;
reg    ap_sig_cseq_ST_st119_fsm_118;
reg    ap_sig_bdd_724;
wire   [31:0] sorted_F_3_5_fu_2095_p3;
wire   [31:0] sorted_F_3_8_fu_2111_p3;
wire   [31:0] sorted_F_3_16_fu_2119_p3;
wire   [2:0] i_5_fu_2133_p2;
reg   [2:0] i_5_reg_3471;
reg    ap_sig_cseq_ST_st120_fsm_119;
reg    ap_sig_bdd_739;
wire   [0:0] exitcond1_fu_2127_p2;
wire   [1:0] tmp_104_fu_2153_p1;
reg   [1:0] tmp_104_reg_3481;
wire   [31:0] sorted_weight_3_2_fu_2188_p3;
reg    ap_sig_cseq_ST_st121_fsm_120;
reg    ap_sig_bdd_755;
wire   [31:0] sorted_weight_3_5_fu_2212_p3;
wire   [31:0] sorted_weight_3_8_fu_2228_p3;
wire   [31:0] sorted_weight_3_11_fu_2236_p3;
wire   [31:0] i6_cast_fu_2244_p1;
reg    ap_sig_cseq_ST_st122_fsm_121;
reg    ap_sig_bdd_770;
wire   [31:0] sorted_F_3_23_fu_2278_p3;
reg   [31:0] sorted_F_3_23_reg_3516;
wire   [0:0] exitcond_fu_2248_p2;
wire   [31:0] sorted_weight_3_20_fu_2294_p3;
reg   [31:0] sorted_weight_3_20_reg_3525;
wire   [31:0] index_3_8_fu_2310_p3;
reg   [31:0] index_3_8_reg_3533;
wire   [0:0] tmp_84_fu_2348_p2;
reg   [0:0] tmp_84_reg_3541;
wire   [31:0] j_5_fu_2376_p2;
reg   [31:0] j_5_reg_3546;
reg    ap_sig_cseq_ST_st123_fsm_122;
reg    ap_sig_bdd_790;
wire   [1:0] tmp_108_fu_2382_p1;
reg   [1:0] tmp_108_reg_3551;
wire   [0:0] tmp_88_fu_2427_p2;
reg   [0:0] tmp_88_reg_3558;
reg    ap_sig_cseq_ST_st124_fsm_123;
reg    ap_sig_bdd_801;
wire   [31:0] sorted_F_3_11_fu_2468_p3;
reg    ap_sig_cseq_ST_st125_fsm_124;
reg    ap_sig_bdd_810;
wire   [0:0] tmp_69_fu_2439_p2;
wire   [31:0] sorted_F_3_13_fu_2484_p3;
wire   [31:0] sorted_F_3_21_fu_2492_p3;
wire   [31:0] sorted_weight_3_18_fu_2547_p3;
wire   [31:0] sorted_weight_1_2_34_fu_2563_p3;
wire   [31:0] sorted_weight_1_4_fu_2571_p3;
wire   [31:0] index_3_6_fu_2611_p3;
wire   [31:0] index_1_1_fu_2627_p3;
wire   [31:0] index_1_3_fu_2635_p3;
wire   [31:0] sorted_F_0_2_fu_2680_p3;
wire   [31:0] sorted_F_0_5_fu_2703_p3;
wire   [31:0] sorted_F_0_8_fu_2718_p3;
wire   [31:0] sorted_F_0_12_fu_2726_p3;
wire   [31:0] sorted_weight_0_5_fu_2748_p3;
wire   [31:0] sorted_weight_0_8_fu_2771_p3;
wire   [31:0] sorted_weight_0_10_fu_2786_p3;
wire   [31:0] sorted_weight_0_15_fu_2794_p3;
wire   [31:0] index_0_3_fu_2816_p3;
wire   [31:0] index_0_6_fu_2839_p3;
wire   [31:0] index_0_9_fu_2854_p3;
wire   [31:0] index_0_12_fu_2862_p3;
wire   [2:0] i_6_fu_2869_p2;
wire   [0:0] tmp_107_fu_2911_p3;
reg   [0:0] tmp_107_reg_3676;
reg    ap_sig_cseq_ST_st127_fsm_126;
reg    ap_sig_bdd_866;
wire   [2:0] ind_1_fu_2919_p2;
reg   [2:0] ind_1_reg_3680;
wire   [31:0] sorted_weight_0_2_fu_2963_p3;
reg   [31:0] sorted_weight_0_2_reg_3685;
wire   [31:0] p_addr10_fu_3001_p2;
reg   [31:0] p_addr10_reg_3690;
reg   [1:0] invdar_reg_428;
reg   [0:0] M_3_2_reg_439;
reg   [0:0] M_2_2_reg_449;
reg   [0:0] M_1_2_reg_459;
reg   [0:0] M_0_2_reg_469;
reg   [2:0] j_reg_479;
reg   [2:0] max_val_2_reg_491;
reg   [31:0] min_val_reg_502;
reg   [31:0] max_val_reg_514;
reg   [31:0] min_F_reg_526;
reg   [31:0] max_F_reg_538;
reg   [2:0] j3_reg_550;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_bdd_912;
reg   [2:0] j2_reg_561;
reg    ap_sig_cseq_ST_st109_fsm_108;
reg    ap_sig_bdd_921;
reg    ap_sig_cseq_ST_st117_fsm_116;
reg    ap_sig_bdd_928;
reg   [31:0] sorted_F_3_reg_572;
reg   [31:0] sorted_F_2_reg_584;
reg   [31:0] sorted_F_3_6_reg_596;
reg   [31:0] sorted_F_3_9_reg_608;
reg   [2:0] i_reg_620;
reg   [31:0] sorted_weight_3_reg_631;
reg   [31:0] sorted_weight_2_reg_643;
reg   [31:0] sorted_weight_3_6_reg_655;
reg   [31:0] sorted_weight_3_9_reg_667;
reg   [2:0] i4_reg_679;
reg   [31:0] index_3_reg_690;
reg   [31:0] index_2_reg_702;
reg   [31:0] index_1_reg_714;
reg   [31:0] index_0_11_reg_726;
reg   [31:0] sorted_weight_3_2_27_reg_738;
reg   [31:0] sorted_weight_2_2_reg_749;
reg   [31:0] sorted_weight_1_2_reg_760;
reg   [31:0] sorted_weight_0_14_reg_771;
reg   [31:0] sorted_F_3_2_28_reg_782;
reg   [31:0] sorted_F_2_2_reg_793;
reg   [31:0] sorted_F_1_2_reg_804;
reg   [31:0] sorted_F_0_9_reg_815;
reg   [2:0] i6_reg_826;
reg   [31:0] index_3_1_reg_838;
reg   [31:0] index_2_1_reg_849;
reg   [31:0] index_1_6_reg_860;
reg   [31:0] sorted_weight_3_3_31_reg_871;
reg   [31:0] sorted_weight_2_3_reg_882;
reg   [31:0] sorted_weight_1_7_reg_893;
reg   [31:0] sorted_F_3_3_32_reg_904;
reg   [31:0] sorted_F_2_3_reg_915;
reg   [31:0] sorted_F_3_24_33_reg_926;
reg   [31:0] j5_0_in_reg_937;
reg   [31:0] sorted_F_1_reg_947;
reg   [31:0] B_reg_965;
reg    ap_sig_cseq_ST_st126_fsm_125;
reg    ap_sig_bdd_1027;
reg    ap_sig_cseq_ST_st133_fsm_132;
reg    ap_sig_bdd_1034;
wire   [0:0] tmp_79_fu_3046_p2;
reg   [2:0] ind_reg_977;
reg   [0:0] p_0_phi_fu_992_p4;
reg   [0:0] p_0_reg_988;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_1059;
wire   [63:0] tmp_31_fu_1228_p1;
wire   [63:0] tmp_22_fu_1395_p1;
wire   [63:0] tmp_29_fu_1606_p1;
wire  signed [63:0] tmp_54_fu_1683_p1;
wire   [63:0] tmp_73_fu_1914_p1;
wire   [18:0] weight_addr_6_gep_fu_342_p3;
wire  signed [63:0] tmp_33_fu_1978_p1;
wire   [63:0] tmp_72_fu_2014_p1;
wire   [63:0] tmp_56_fu_2031_p1;
wire   [63:0] tmp_74_fu_2148_p1;
wire   [63:0] tmp_89_fu_2354_p1;
wire   [63:0] tmp_91_fu_2371_p1;
wire   [63:0] tmp_93_fu_2888_p1;
wire   [63:0] tmp_95_fu_2906_p1;
wire  signed [63:0] tmp_96_fu_3006_p1;
reg    ap_sig_cseq_ST_st128_fsm_127;
reg    ap_sig_bdd_1100;
reg   [31:0] matchsumtot_fu_162;
reg    ap_sig_cseq_ST_st86_fsm_85;
reg    ap_sig_bdd_1140;
reg    ap_sig_cseq_ST_st93_fsm_92;
reg    ap_sig_bdd_1150;
wire   [31:0] grp_fu_1016_p2;
wire   [31:0] grp_fu_1022_p2;
wire   [7:0] tmp_47_fu_1971_p2;
reg   [31:0] grp_fu_1001_p0;
reg   [31:0] grp_fu_1001_p1;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_1206;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_bdd_1213;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_1221;
reg    ap_sig_cseq_ST_st104_fsm_103;
reg    ap_sig_bdd_1230;
reg    ap_sig_cseq_ST_st112_fsm_111;
reg    ap_sig_bdd_1237;
wire   [31:0] grp_fu_1005_p0;
wire   [31:0] grp_fu_1005_p1;
reg   [31:0] grp_fu_1010_p0;
reg   [31:0] grp_fu_1010_p1;
reg    ap_sig_cseq_ST_st91_fsm_90;
reg    ap_sig_bdd_1250;
reg    ap_sig_cseq_ST_st100_fsm_99;
reg    ap_sig_bdd_1257;
reg   [31:0] grp_fu_1016_p0;
reg   [31:0] grp_fu_1016_p1;
wire   [31:0] grp_fu_1022_p0;
wire   [31:0] grp_fu_1022_p1;
wire   [7:0] grp_fu_1031_p0;
reg   [31:0] grp_fu_1034_p0;
wire   [31:0] tmp_24_fu_1037_p0;
reg   [31:0] grp_fu_1040_p0;
reg   [31:0] grp_fu_1040_p1;
wire   [31:0] tmp_51_fu_1045_p0;
wire   [31:0] tmp_51_fu_1045_p1;
wire   [31:0] grp_fu_1053_p1;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_1279;
wire   [63:0] grp_fu_1058_p0;
wire   [63:0] grp_fu_1058_p1;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_1289;
wire   [63:0] tmp_8_fu_1063_p0;
wire   [63:0] tmp_8_fu_1063_p1;
wire   [31:0] grp_fu_1067_p0;
wire   [19:0] tmp_23_trn_cast_fu_1219_p1;
wire   [19:0] p_addr7_fu_1223_p2;
wire   [31:0] p_Val2_s_fu_1236_p1;
wire   [22:0] loc_V_1_fu_1258_p1;
wire   [23:0] p_Result_1_fu_1262_p3;
wire   [7:0] loc_V_fu_1248_p4;
wire   [8:0] tmp_i_i_i_cast_fu_1274_p1;
wire   [8:0] sh_assign_fu_1278_p2;
wire   [7:0] tmp_1_i_i_fu_1292_p2;
wire   [0:0] isNeg_fu_1284_p3;
wire  signed [8:0] tmp_1_i_i_cast_fu_1298_p1;
wire   [8:0] sh_assign_1_fu_1302_p3;
wire  signed [31:0] sh_assign_1_cast_fu_1310_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_1314_p1;
wire   [77:0] tmp_i_i_fu_1270_p1;
wire   [77:0] tmp_2_i_i_fu_1318_p1;
wire   [23:0] tmp_3_i_i_fu_1322_p2;
wire   [0:0] tmp_63_fu_1334_p3;
wire   [77:0] tmp_5_i_i_fu_1328_p2;
wire   [31:0] tmp_32_fu_1342_p1;
wire   [31:0] tmp_40_fu_1346_p4;
wire   [31:0] p_Val2_7_i_i_fu_1364_p2;
wire   [31:0] p_Val2_5_fu_1369_p3;
wire   [0:0] abscond_fu_1381_p2;
wire   [31:0] neg_fu_1375_p2;
wire   [63:0] tmp_28_to_int_fu_1405_p1;
wire   [63:0] tmp_31_to_int_fu_1422_p1;
wire   [10:0] tmp_1_fu_1408_p4;
wire   [51:0] tmp_64_fu_1418_p1;
wire   [0:0] notrhs_fu_1445_p2;
wire   [0:0] notlhs_fu_1439_p2;
wire   [10:0] tmp_3_fu_1425_p4;
wire   [51:0] tmp_66_fu_1435_p1;
wire   [0:0] notrhs4_fu_1463_p2;
wire   [0:0] notlhs3_fu_1457_p2;
wire   [0:0] tmp_5_fu_1451_p2;
wire   [0:0] tmp_6_fu_1469_p2;
wire   [0:0] tmp_7_fu_1475_p2;
wire   [0:0] tmp_8_fu_1063_p2;
wire   [0:0] sel_tmp2_fu_1487_p2;
wire   [0:0] sel_tmp5_fu_1491_p2;
wire   [0:0] sel_tmp7_fu_1496_p2;
wire   [0:0] sel_tmp9_fu_1508_p2;
wire   [0:0] sel_tmp_fu_1513_p2;
wire   [0:0] sel_tmp1_fu_1525_p2;
wire   [0:0] sel_tmp3_fu_1530_p2;
wire   [0:0] not_sel_tmp_fu_1519_p2;
wire   [0:0] not_sel_tmp1_fu_1536_p2;
wire   [0:0] tmp_fu_1542_p2;
wire   [0:0] sel_tmp4_fu_1502_p2;
wire   [0:0] sel_tmp6_fu_1548_p2;
wire   [0:0] sel_tmp8_fu_1560_p2;
wire   [0:0] sel_tmp10_fu_1572_p2;
wire   [1:0] tmp_81_fu_1611_p1;
wire   [0:0] sel_tmp11_fu_1615_p2;
wire   [0:0] sel_tmp13_fu_1629_p2;
wire   [0:0] sel_tmp12_fu_1621_p3;
wire   [0:0] sel_tmp15_fu_1643_p2;
wire   [0:0] sel_tmp14_fu_1635_p3;
wire   [29:0] tmp_76_fu_1657_p4;
wire   [31:0] p_addr4_fu_1678_p2;
wire   [31:0] max_F_1_to_int_fu_1691_p1;
wire   [31:0] max_F_to_int_fu_1708_p1;
wire   [7:0] tmp_11_fu_1694_p4;
wire   [22:0] tmp_83_fu_1704_p1;
wire   [0:0] notrhs6_fu_1732_p2;
wire   [0:0] notlhs5_fu_1726_p2;
wire   [7:0] tmp_13_fu_1712_p4;
wire   [22:0] tmp_100_fu_1722_p1;
wire   [0:0] notrhs8_fu_1750_p2;
wire   [0:0] notlhs7_fu_1744_p2;
wire   [0:0] tmp_15_fu_1738_p2;
wire   [0:0] tmp_16_fu_1756_p2;
wire   [0:0] tmp_17_fu_1762_p2;
wire   [0:0] grp_fu_1040_p2;
wire   [31:0] min_F_to_int_fu_1774_p1;
wire   [7:0] tmp_30_fu_1778_p4;
wire   [22:0] tmp_101_fu_1788_p1;
wire   [0:0] notrhs2_fu_1798_p2;
wire   [0:0] notlhs1_fu_1792_p2;
wire   [0:0] tmp_41_fu_1804_p2;
wire   [0:0] tmp_49_fu_1810_p2;
wire   [0:0] tmp_51_fu_1045_p2;
wire   [0:0] sel_tmp16_fu_1822_p2;
wire   [31:0] min_val_2_fu_1826_p3;
wire   [31:0] max_F_3_fu_1840_p3;
wire   [31:0] p_addr1_fu_1866_p2;
wire   [31:0] j3_cast_fu_1883_p1;
wire   [19:0] j3_cast_cast_fu_1887_p1;
wire   [19:0] p_addr5_fu_1909_p2;
wire   [31:0] matchsumtot_to_int_fu_1920_p1;
wire   [7:0] tmp_59_fu_1924_p4;
wire   [22:0] tmp_102_fu_1934_p1;
wire   [0:0] notrhs3_fu_1944_p2;
wire   [0:0] notlhs2_fu_1938_p2;
wire   [0:0] tmp_65_fu_1950_p2;
wire   [31:0] j2_cast_fu_1983_p1;
wire   [19:0] j2_cast_cast_fu_1987_p1;
wire   [19:0] p_addr2_fu_2009_p2;
wire   [0:0] sel_tmp17_fu_2040_p2;
wire   [0:0] sel_tmp18_fu_2053_p2;
wire   [31:0] sorted_F_3_24_fu_2045_p3;
wire   [0:0] sel_tmp19_fu_2066_p2;
wire   [31:0] sorted_F_3_1_fu_2058_p3;
wire   [31:0] sorted_F_3_3_fu_2079_p3;
wire   [31:0] sorted_F_3_4_fu_2087_p3;
wire   [31:0] sorted_F_3_7_fu_2103_p3;
wire   [19:0] tmp_63_trn_cast_fu_2139_p1;
wire   [19:0] p_addr8_fu_2143_p2;
wire   [0:0] sel_tmp20_fu_2157_p2;
wire   [0:0] sel_tmp21_fu_2170_p2;
wire   [31:0] sorted_weight_3_26_fu_2162_p3;
wire   [0:0] sel_tmp22_fu_2183_p2;
wire   [31:0] sorted_weight_3_1_fu_2175_p3;
wire   [31:0] sorted_weight_3_3_fu_2196_p3;
wire   [31:0] sorted_weight_3_4_fu_2204_p3;
wire   [31:0] sorted_weight_3_7_fu_2220_p3;
wire   [1:0] tmp_105_fu_2254_p1;
wire   [0:0] sel_tmp23_fu_2258_p2;
wire   [0:0] sel_tmp24_fu_2272_p2;
wire   [31:0] sorted_F_3_17_fu_2264_p3;
wire   [31:0] sorted_weight_3_12_fu_2286_p3;
wire   [31:0] index_3_30_fu_2302_p3;
wire   [31:0] sorted_F_0_1_to_int_fu_2318_p1;
wire   [7:0] tmp_80_fu_2322_p4;
wire   [22:0] tmp_106_fu_2332_p1;
wire   [0:0] notrhs7_fu_2342_p2;
wire   [0:0] notlhs6_fu_2336_p2;
wire   [18:0] tmp_90_fu_2358_p2;
wire   [31:0] p_addr9_fu_2363_p3;
wire   [31:0] sorted_F_1_to_int_fu_2386_p1;
wire   [7:0] tmp_82_fu_2390_p4;
wire   [22:0] tmp_111_fu_2400_p1;
wire   [0:0] notrhs9_fu_2410_p2;
wire   [0:0] notlhs8_fu_2404_p2;
wire   [0:0] tmp_85_fu_2416_p2;
wire   [0:0] tmp_86_fu_2422_p2;
wire   [0:0] tmp_68_fu_2433_p2;
wire   [1:0] tmp_112_fu_2444_p1;
wire   [0:0] sel_tmp28_fu_2448_p2;
wire   [0:0] sel_tmp29_fu_2462_p2;
wire   [31:0] sorted_F_3_10_fu_2454_p3;
wire   [31:0] sorted_F_3_12_fu_2476_p3;
wire   [0:0] sel_tmp30_fu_2500_p2;
wire   [0:0] sel_tmp31_fu_2513_p2;
wire   [31:0] sorted_weight_3_14_fu_2505_p3;
wire   [0:0] sel_tmp32_fu_2526_p2;
wire   [31:0] sorted_weight_3_15_fu_2518_p3;
wire   [31:0] sorted_weight_3_21_fu_2531_p3;
wire   [31:0] sorted_weight_3_17_fu_2539_p3;
wire   [31:0] sorted_weight_1_fu_2555_p3;
wire   [31:0] index_3_2_fu_2579_p3;
wire   [31:0] index_3_3_fu_2587_p3;
wire   [31:0] index_3_9_fu_2595_p3;
wire   [31:0] index_3_5_fu_2603_p3;
wire   [31:0] index_1_35_fu_2619_p3;
wire   [1:0] tmp_113_fu_2643_p1;
wire   [0:0] sel_tmp33_fu_2647_p2;
wire   [0:0] sel_tmp34_fu_2660_p2;
wire   [31:0] sorted_F_0_fu_2653_p3;
wire   [0:0] sel_tmp35_fu_2674_p2;
wire   [31:0] sorted_F_0_1_fu_2666_p3;
wire   [31:0] sorted_F_0_3_fu_2688_p3;
wire   [31:0] sorted_F_0_4_fu_2695_p3;
wire   [31:0] sorted_F_0_7_fu_2711_p3;
wire   [31:0] sorted_weight_0_3_fu_2733_p3;
wire   [31:0] sorted_weight_0_4_fu_2740_p3;
wire   [31:0] sorted_weight_0_6_fu_2756_p3;
wire   [31:0] sorted_weight_0_7_fu_2763_p3;
wire   [31:0] sorted_weight_0_9_fu_2779_p3;
wire   [31:0] index_0_1_fu_2801_p3;
wire   [31:0] index_0_2_fu_2808_p3;
wire   [31:0] index_0_4_fu_2824_p3;
wire   [31:0] index_0_5_fu_2831_p3;
wire   [31:0] index_0_8_fu_2847_p3;
wire   [18:0] tmp_92_fu_2875_p2;
wire   [31:0] p_addr_fu_2880_p3;
wire   [18:0] tmp_94_fu_2893_p2;
wire   [31:0] p_addr3_fu_2898_p3;
wire   [1:0] tmp_109_fu_2925_p1;
wire   [0:0] sel_tmp25_fu_2929_p2;
wire   [0:0] sel_tmp26_fu_2943_p2;
wire   [31:0] sorted_weight_0_fu_2935_p3;
wire   [0:0] sel_tmp27_fu_2957_p2;
wire   [31:0] sorted_weight_0_1_fu_2949_p3;
wire   [0:0] or_cond_fu_2979_p2;
wire   [31:0] newSel_fu_2971_p3;
wire   [31:0] newSel1_fu_2985_p3;
wire   [31:0] index_0_fu_2993_p3;
wire   [31:0] B_1_to_int_fu_3010_p1;
wire   [7:0] tmp_75_fu_3014_p4;
wire   [22:0] tmp_110_fu_3024_p1;
wire   [0:0] notrhs5_fu_3034_p2;
wire   [0:0] notlhs4_fu_3028_p2;
wire   [0:0] tmp_77_fu_3040_p2;
reg   [1:0] grp_fu_1001_opcode;
wire    grp_fu_1001_ce;
wire    grp_fu_1005_ce;
wire    grp_fu_1010_ce;
wire    grp_fu_1016_ce;
wire    grp_fu_1022_ce;
wire    grp_fu_1031_ce;
wire    grp_fu_1034_ce;
reg   [4:0] grp_fu_1040_opcode;
wire   [4:0] tmp_51_fu_1045_opcode;
wire   [31:0] grp_fu_1053_p0;
wire    grp_fu_1053_ce;
wire    grp_fu_1058_ce;
wire   [4:0] tmp_8_fu_1063_opcode;
wire    grp_fu_1067_ce;
reg   [0:0] ap_return_preg = 1'b0;
reg   [132:0] ap_NS_fsm;
reg    ap_sig_bdd_1018;


backsub_EM_ALGO_akt #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
akt_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( akt_address0 ),
    .ce0( akt_ce0 ),
    .we0( akt_we0 ),
    .d0( akt_d0 ),
    .q0( akt_q0 )
);

backsub_EM_ALGO_akt #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
F_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( F_address0 ),
    .ce0( F_ce0 ),
    .we0( F_we0 ),
    .d0( F_d0 ),
    .q0( F_q0 )
);

backsub_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_faddfsub_32ns_32ns_32_5_full_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1001_p0 ),
    .din1( grp_fu_1001_p1 ),
    .opcode( grp_fu_1001_opcode ),
    .ce( grp_fu_1001_ce ),
    .dout( grp_fu_1001_p2 )
);

backsub_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fadd_32ns_32ns_32_5_full_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1005_p0 ),
    .din1( grp_fu_1005_p1 ),
    .ce( grp_fu_1005_ce ),
    .dout( grp_fu_1005_p2 )
);

backsub_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fmul_32ns_32ns_32_4_max_dsp_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1010_p0 ),
    .din1( grp_fu_1010_p1 ),
    .ce( grp_fu_1010_ce ),
    .dout( grp_fu_1010_p2 )
);

backsub_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fdiv_32ns_32ns_32_16_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1016_p0 ),
    .din1( grp_fu_1016_p1 ),
    .ce( grp_fu_1016_ce ),
    .dout( grp_fu_1016_p2 )
);

backsub_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fdiv_32ns_32ns_32_16_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1022_p0 ),
    .din1( grp_fu_1022_p1 ),
    .ce( grp_fu_1022_ce ),
    .dout( grp_fu_1022_p2 )
);

backsub_uitofp_8ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
backsub_uitofp_8ns_32_6_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1031_p0 ),
    .ce( grp_fu_1031_ce ),
    .dout( grp_fu_1031_p1 )
);

backsub_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_sitofp_32ns_32_6_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1034_p0 ),
    .ce( grp_fu_1034_ce ),
    .dout( grp_fu_1034_p1 )
);

backsub_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
backsub_fpext_32ns_64_1_U8(
    .din0( tmp_24_fu_1037_p0 ),
    .dout( tmp_24_fu_1037_p1 )
);

backsub_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
backsub_fcmp_32ns_32ns_1_1_U9(
    .din0( grp_fu_1040_p0 ),
    .din1( grp_fu_1040_p1 ),
    .opcode( grp_fu_1040_opcode ),
    .dout( grp_fu_1040_p2 )
);

backsub_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
backsub_fcmp_32ns_32ns_1_1_U10(
    .din0( tmp_51_fu_1045_p0 ),
    .din1( tmp_51_fu_1045_p1 ),
    .opcode( tmp_51_fu_1045_opcode ),
    .dout( tmp_51_fu_1045_p2 )
);

backsub_fsqrt_32ns_32ns_32_12 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fsqrt_32ns_32ns_32_12_U11(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1053_p0 ),
    .din1( grp_fu_1053_p1 ),
    .ce( grp_fu_1053_ce ),
    .dout( grp_fu_1053_p2 )
);

backsub_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
backsub_dmul_64ns_64ns_64_6_max_dsp_U12(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1058_p0 ),
    .din1( grp_fu_1058_p1 ),
    .ce( grp_fu_1058_ce ),
    .dout( grp_fu_1058_p2 )
);

backsub_dcmp_64ns_64ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
backsub_dcmp_64ns_64ns_1_1_U13(
    .din0( tmp_8_fu_1063_p0 ),
    .din1( tmp_8_fu_1063_p1 ),
    .opcode( tmp_8_fu_1063_opcode ),
    .dout( tmp_8_fu_1063_p2 )
);

backsub_sitodp_32ns_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
backsub_sitodp_32ns_64_6_U14(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1067_p0 ),
    .ce( grp_fu_1067_ce ),
    .dout( grp_fu_1067_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_return_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv1_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & ((ap_const_lv1_0 == icmp_reg_3273) | ~(ap_const_lv1_0 == tmp_107_reg_3676) | ~(ap_const_lv1_0 == tmp_79_fu_3046_p2)))) begin
            ap_return_preg <= p_0_phi_fu_992_p4;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & (ap_const_lv1_0 == tmp_79_fu_3046_p2) & ~(ap_const_lv1_0 == icmp_reg_3273) & (ap_const_lv1_0 == tmp_107_reg_3676))) begin
        B_reg_965 <= reg_1119;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125)) begin
        B_reg_965 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        M_0_2_reg_469 <= M_0_4_fu_1584_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        M_0_2_reg_469 <= M_load_reg_3096;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        M_1_2_reg_459 <= M_1_4_fu_1578_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        M_1_2_reg_459 <= M_1_load_reg_3101;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        M_2_2_reg_449 <= M_2_4_fu_1566_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        M_2_2_reg_449 <= M_2_load_reg_3106;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        M_3_2_reg_439 <= M_3_4_fu_1554_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        M_3_2_reg_439 <= M_3_load_reg_3111;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st118_fsm_117) & ~(ap_const_lv1_0 == exitcond2_fu_2019_p2))) begin
        i4_reg_679 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120)) begin
        i4_reg_679 <= i_5_reg_3471;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        i6_reg_826 <= ap_const_lv3_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        i6_reg_826 <= i_6_fu_2869_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st110_fsm_109) & ~(ap_const_lv1_0 == exitcond4_fu_1991_p2))) begin
        i_reg_620 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118)) begin
        i_reg_620 <= i_4_reg_3431;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & (ap_const_lv1_0 == tmp_79_fu_3046_p2) & ~(ap_const_lv1_0 == icmp_reg_3273) & (ap_const_lv1_0 == tmp_107_reg_3676))) begin
        ind_reg_977 <= ind_1_reg_3680;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125)) begin
        ind_reg_977 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        index_0_11_reg_726 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        index_0_11_reg_726 <= index_0_12_fu_2862_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        index_1_6_reg_860 <= index_1_3_fu_2635_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        index_1_6_reg_860 <= index_1_reg_714;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        index_1_reg_714 <= ap_const_lv32_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        index_1_reg_714 <= index_0_9_fu_2854_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        index_2_1_reg_849 <= index_1_1_fu_2627_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        index_2_1_reg_849 <= index_2_reg_702;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        index_2_reg_702 <= ap_const_lv32_2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        index_2_reg_702 <= index_0_6_fu_2839_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        index_3_1_reg_838 <= index_3_6_fu_2611_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        index_3_1_reg_838 <= index_3_reg_690;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        index_3_reg_690 <= ap_const_lv32_3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        index_3_reg_690 <= index_0_3_fu_2816_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_s_reg_3092))) begin
        invdar_reg_428 <= indvarinc_reg_3087;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        invdar_reg_428 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        j2_reg_561 <= j_3_reg_3414;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108)) begin
        j2_reg_561 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        j3_reg_550 <= j_4_reg_3358;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        j3_reg_550 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        j5_0_in_reg_937 <= j_5_reg_3546;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        j5_0_in_reg_937 <= i6_cast_fu_2244_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        j_reg_479 <= j_1_reg_3147;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        j_reg_479 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54) & (ap_const_lv1_0 == tmp_52_reg_3363))) begin
        matchsumtot_fu_162 <= reg_1119;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & ~(ap_const_lv1_0 == exitcond5_fu_1594_p2) & (ap_const_lv1_0 == icmp_fu_1667_p2))) begin
        matchsumtot_fu_162 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == exitcond6_fu_1207_p2))) begin
        max_F_reg_538 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        max_F_reg_538 <= max_F_2_fu_1847_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == exitcond6_fu_1207_p2))) begin
        max_val_2_reg_491 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        max_val_2_reg_491 <= j_2_reg_3256;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == exitcond6_fu_1207_p2))) begin
        max_val_reg_514 <= ap_const_lv32_A;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        max_val_reg_514 <= min_val_3_fu_1833_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == exitcond6_fu_1207_p2))) begin
        min_F_reg_526 <= ap_const_lv32_447A0000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        min_F_reg_526 <= min_F_1_fu_1860_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == exitcond6_fu_1207_p2))) begin
        min_val_reg_502 <= ap_const_lv32_A;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        min_val_reg_502 <= min_val_1_fu_1854_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        p_0_reg_988 <= ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & ((~(ap_const_lv1_0 == icmp_reg_3273) & ~(ap_const_lv1_0 == tmp_107_reg_3676)) | (~(ap_const_lv1_0 == icmp_reg_3273) & ~(ap_const_lv1_0 == tmp_79_fu_3046_p2))))) begin
        p_0_reg_988 <= ap_const_lv1_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        sorted_F_0_9_reg_815 <= sorted_F_3_9_reg_608;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_F_0_9_reg_815 <= sorted_F_0_12_fu_2726_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        sorted_F_1_2_reg_804 <= sorted_F_3_6_reg_596;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_F_1_2_reg_804 <= sorted_F_0_8_fu_2718_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st123_fsm_122)) begin
        if ((tmp_108_fu_2382_p1 == ap_const_lv2_0)) begin
            sorted_F_1_reg_947 <= sorted_F_0_9_reg_815;
        end else if (ap_sig_bdd_1018) begin
            sorted_F_1_reg_947 <= sorted_F_3_3_32_reg_904;
        end else if ((tmp_108_fu_2382_p1 == ap_const_lv2_2)) begin
            sorted_F_1_reg_947 <= sorted_F_2_3_reg_915;
        end else if ((tmp_108_fu_2382_p1 == ap_const_lv2_1)) begin
            sorted_F_1_reg_947 <= sorted_F_3_24_33_reg_926;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        sorted_F_2_2_reg_793 <= sorted_F_2_reg_584;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_F_2_2_reg_793 <= sorted_F_0_5_fu_2703_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_F_2_3_reg_915 <= sorted_F_3_13_fu_2484_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        sorted_F_2_3_reg_915 <= sorted_F_2_2_reg_793;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_F_3_24_33_reg_926 <= sorted_F_3_21_fu_2492_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        sorted_F_3_24_33_reg_926 <= sorted_F_1_2_reg_804;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        sorted_F_3_2_28_reg_782 <= sorted_F_3_reg_572;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_F_3_2_28_reg_782 <= sorted_F_0_2_fu_2680_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_F_3_3_32_reg_904 <= sorted_F_3_11_fu_2468_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        sorted_F_3_3_32_reg_904 <= sorted_F_3_2_28_reg_782;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        sorted_weight_0_14_reg_771 <= sorted_weight_3_9_reg_667;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_weight_0_14_reg_771 <= sorted_weight_0_15_fu_2794_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        sorted_weight_1_2_reg_760 <= sorted_weight_3_6_reg_655;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_weight_1_2_reg_760 <= sorted_weight_0_10_fu_2786_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_weight_1_7_reg_893 <= sorted_weight_1_4_fu_2571_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        sorted_weight_1_7_reg_893 <= sorted_weight_1_2_reg_760;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        sorted_weight_2_2_reg_749 <= sorted_weight_2_reg_643;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_weight_2_2_reg_749 <= sorted_weight_0_8_fu_2771_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_weight_2_3_reg_882 <= sorted_weight_1_2_34_fu_2563_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        sorted_weight_2_3_reg_882 <= sorted_weight_2_2_reg_749;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        sorted_weight_3_2_27_reg_738 <= sorted_weight_3_reg_631;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & (ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_weight_3_2_27_reg_738 <= sorted_weight_0_5_fu_2748_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) & ~(ap_const_lv1_0 == tmp_69_fu_2439_p2))) begin
        sorted_weight_3_3_31_reg_871 <= sorted_weight_3_18_fu_2547_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        sorted_weight_3_3_31_reg_871 <= sorted_weight_3_2_27_reg_738;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & (ap_const_lv1_0 == exitcond5_fu_1594_p2))) begin
        M_load_phi_reg_3261 <= M_load_phi_fu_1649_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        abs_reg_3193 <= abs_fu_1387_p3;
        tmp_24_reg_3198 <= tmp_24_fu_1037_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        akt_load_reg_3396 <= akt_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        back_gauss_load_reg_3172 <= back_gauss_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st118_fsm_117)) begin
        i_4_reg_3431 <= i_4_fu_2025_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119)) begin
        i_5_reg_3471 <= i_5_fu_2133_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & ~(ap_const_lv1_0 == exitcond5_fu_1594_p2))) begin
        icmp_reg_3273 <= icmp_fu_1667_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st127_fsm_126)) begin
        ind_1_reg_3680 <= ind_1_fu_2919_p2;
        tmp_107_reg_3676 <= ind_reg_977[ap_const_lv32_2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond_fu_2248_p2))) begin
        index_3_8_reg_3533 <= index_3_8_fu_2310_p3;
        sorted_F_3_23_reg_3516 <= sorted_F_3_23_fu_2278_p3;
        sorted_weight_3_20_reg_3525 <= sorted_weight_3_20_fu_2294_p3;
        tmp_84_reg_3541 <= tmp_84_fu_2348_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        indvarinc_reg_3087 <= indvarinc_fu_1144_p2;
        tmp_s_reg_3092 <= tmp_s_fu_1170_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        j_1_reg_3147 <= j_1_fu_1213_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        j_2_reg_3256 <= j_2_fu_1600_p2;
        max_val_3_cast_reg_3247[0] <= max_val_3_cast_fu_1590_p1[0];
max_val_3_cast_reg_3247[1] <= max_val_3_cast_fu_1590_p1[1];
max_val_3_cast_reg_3247[2] <= max_val_3_cast_fu_1590_p1[2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st110_fsm_109)) begin
        j_3_reg_3414 <= j_3_fu_1997_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        j_4_reg_3358 <= j_4_fu_1897_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st123_fsm_122)) begin
        j_5_reg_3546 <= j_5_fu_2376_p2;
        tmp_108_reg_3551 <= tmp_108_fu_2382_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & ~(ap_const_lv1_0 == exitcond5_fu_1594_p2) & ~(ap_const_lv1_0 == icmp_fu_1667_p2))) begin
        matchsum_addr_reg_3299 <= tmp_54_fu_1683_p1;
        mean_addr_4_reg_3284 <= tmp_54_fu_1683_p1;
        sigma_addr_4_reg_3289 <= tmp_54_fu_1683_p1;
        weight_addr_reg_3294 <= tmp_54_fu_1683_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        matchsum_load_1_reg_3381 <= matchsum_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        max_F_4_reg_3304 <= F_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        p_Result_s_reg_3177 <= p_Val2_s_fu_1236_p1[ap_const_lv32_1F];
        p_Val2_3_reg_3182 <= p_Val2_3_fu_1356_p3;
        tmp_i_reg_3188 <= grp_fu_1053_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st127_fsm_126) & (ap_const_lv1_0 == tmp_107_fu_2911_p3))) begin
        p_addr10_reg_3690 <= p_addr10_fu_3001_p2;
        sorted_weight_0_2_reg_3685 <= sorted_weight_0_2_fu_2963_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        p_addr6_cast_reg_3136[2] <= p_addr6_cast_fu_1203_p1[2];
p_addr6_cast_reg_3136[3] <= p_addr6_cast_fu_1203_p1[3];
p_addr6_cast_reg_3136[4] <= p_addr6_cast_fu_1203_p1[4];
p_addr6_cast_reg_3136[5] <= p_addr6_cast_fu_1203_p1[5];
p_addr6_cast_reg_3136[6] <= p_addr6_cast_fu_1203_p1[6];
p_addr6_cast_reg_3136[7] <= p_addr6_cast_fu_1203_p1[7];
p_addr6_cast_reg_3136[8] <= p_addr6_cast_fu_1203_p1[8];
p_addr6_cast_reg_3136[9] <= p_addr6_cast_fu_1203_p1[9];
p_addr6_cast_reg_3136[10] <= p_addr6_cast_fu_1203_p1[10];
p_addr6_cast_reg_3136[11] <= p_addr6_cast_fu_1203_p1[11];
p_addr6_cast_reg_3136[12] <= p_addr6_cast_fu_1203_p1[12];
p_addr6_cast_reg_3136[13] <= p_addr6_cast_fu_1203_p1[13];
p_addr6_cast_reg_3136[14] <= p_addr6_cast_fu_1203_p1[14];
p_addr6_cast_reg_3136[15] <= p_addr6_cast_fu_1203_p1[15];
p_addr6_cast_reg_3136[16] <= p_addr6_cast_fu_1203_p1[16];
p_addr6_cast_reg_3136[17] <= p_addr6_cast_fu_1203_p1[17];
p_addr6_cast_reg_3136[18] <= p_addr6_cast_fu_1203_p1[18];
        p_addr6_reg_3129[2] <= p_addr6_fu_1199_p1[2];
p_addr6_reg_3129[3] <= p_addr6_fu_1199_p1[3];
p_addr6_reg_3129[4] <= p_addr6_fu_1199_p1[4];
p_addr6_reg_3129[5] <= p_addr6_fu_1199_p1[5];
p_addr6_reg_3129[6] <= p_addr6_fu_1199_p1[6];
p_addr6_reg_3129[7] <= p_addr6_fu_1199_p1[7];
p_addr6_reg_3129[8] <= p_addr6_fu_1199_p1[8];
p_addr6_reg_3129[9] <= p_addr6_fu_1199_p1[9];
p_addr6_reg_3129[10] <= p_addr6_fu_1199_p1[10];
p_addr6_reg_3129[11] <= p_addr6_fu_1199_p1[11];
p_addr6_reg_3129[12] <= p_addr6_fu_1199_p1[12];
p_addr6_reg_3129[13] <= p_addr6_fu_1199_p1[13];
p_addr6_reg_3129[14] <= p_addr6_fu_1199_p1[14];
p_addr6_reg_3129[15] <= p_addr6_fu_1199_p1[15];
p_addr6_reg_3129[16] <= p_addr6_fu_1199_p1[16];
p_addr6_reg_3129[17] <= p_addr6_fu_1199_p1[17];
p_addr6_reg_3129[18] <= p_addr6_fu_1199_p1[18];
        tmp_27_reg_3121[2] <= tmp_27_fu_1192_p3[2];
tmp_27_reg_3121[3] <= tmp_27_fu_1192_p3[3];
tmp_27_reg_3121[4] <= tmp_27_fu_1192_p3[4];
tmp_27_reg_3121[5] <= tmp_27_fu_1192_p3[5];
tmp_27_reg_3121[6] <= tmp_27_fu_1192_p3[6];
tmp_27_reg_3121[7] <= tmp_27_fu_1192_p3[7];
tmp_27_reg_3121[8] <= tmp_27_fu_1192_p3[8];
tmp_27_reg_3121[9] <= tmp_27_fu_1192_p3[9];
tmp_27_reg_3121[10] <= tmp_27_fu_1192_p3[10];
tmp_27_reg_3121[11] <= tmp_27_fu_1192_p3[11];
tmp_27_reg_3121[12] <= tmp_27_fu_1192_p3[12];
tmp_27_reg_3121[13] <= tmp_27_fu_1192_p3[13];
tmp_27_reg_3121[14] <= tmp_27_fu_1192_p3[14];
tmp_27_reg_3121[15] <= tmp_27_fu_1192_p3[15];
tmp_27_reg_3121[16] <= tmp_27_fu_1192_p3[16];
tmp_27_reg_3121[17] <= tmp_27_fu_1192_p3[17];
tmp_27_reg_3121[18] <= tmp_27_fu_1192_p3[18];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        reg_1083 <= grp_fu_1034_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70))) begin
        reg_1089 <= mean_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93))) begin
        reg_1095 <= sigma_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) | (ap_const_logic_1 == ap_sig_cseq_ST_st111_fsm_110))) begin
        reg_1111 <= weight_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53) | (ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_84) | (ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89) | (ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98) | (ap_const_logic_1 == ap_sig_cseq_ST_st103_fsm_102) | (ap_const_logic_1 == ap_sig_cseq_ST_st108_fsm_107) | (ap_const_logic_1 == ap_sig_cseq_ST_st116_fsm_115) | (ap_const_logic_1 == ap_sig_cseq_ST_st132_fsm_131))) begin
        reg_1119 <= grp_fu_1001_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) | (ap_const_logic_1 == ap_sig_cseq_ST_st103_fsm_102) | (ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79))) begin
        reg_1138 <= grp_fu_1010_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118)) begin
        sorted_F_2_reg_584 <= sorted_F_3_5_fu_2095_p3;
        sorted_F_3_6_reg_596 <= sorted_F_3_8_fu_2111_p3;
        sorted_F_3_9_reg_608 <= sorted_F_3_16_fu_2119_p3;
        sorted_F_3_reg_572 <= sorted_F_3_2_fu_2071_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120)) begin
        sorted_weight_2_reg_643 <= sorted_weight_3_5_fu_2212_p3;
        sorted_weight_3_6_reg_655 <= sorted_weight_3_8_fu_2228_p3;
        sorted_weight_3_9_reg_667 <= sorted_weight_3_11_fu_2236_p3;
        sorted_weight_3_reg_631 <= sorted_weight_3_2_fu_2188_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st118_fsm_117) & (ap_const_lv1_0 == exitcond2_fu_2019_p2))) begin
        tmp_103_reg_3441 <= tmp_103_fu_2036_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & (ap_const_lv1_0 == exitcond1_fu_2127_p2))) begin
        tmp_104_reg_3481 <= tmp_104_fu_2153_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        tmp_19_reg_3313 <= tmp_19_fu_1768_p2;
        tmp_53_reg_3318 <= tmp_53_fu_1816_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        tmp_23_reg_3210 <= grp_fu_1067_p1;
        tmp_25_reg_3216 <= grp_fu_1058_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97)) begin
        tmp_44_reg_3401 <= grp_fu_1010_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st108_fsm_107)) begin
        tmp_46_reg_3406 <= grp_fu_1005_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        tmp_48_reg_3344 <= grp_fu_1031_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st110_fsm_109) & (ap_const_lv1_0 == exitcond4_fu_1991_p2))) begin
        tmp_50_reg_3419 <= tmp_50_fu_2003_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & (exitcond3_fu_1891_p2 == ap_const_lv1_0))) begin
        tmp_52_reg_3363 <= tmp_52_fu_1903_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        tmp_58_reg_3349 <= tmp_58_fu_1871_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(exitcond3_fu_1891_p2 == ap_const_lv1_0))) begin
        tmp_70_reg_3377 <= tmp_70_fu_1956_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        tmp_71_reg_3203 <= tmp_71_fu_1401_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        tmp_88_reg_3558 <= tmp_88_fu_2427_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        tmp_9_reg_3222 <= tmp_9_fu_1481_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st110_fsm_109) & (ap_const_lv1_0 == exitcond4_fu_1991_p2) & (ap_const_lv1_0 == tmp_50_fu_2003_p2))) begin
        weight_addr_5_reg_3423 <= tmp_72_fu_2014_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & (exitcond3_fu_1891_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_52_fu_1903_p2))) begin
        weight_addr_8_reg_3367 <= tmp_73_fu_1914_p1;
    end
end

/// F_address0 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st118_fsm_117 or tmp_22_fu_1395_p1 or tmp_29_fu_1606_p1 or tmp_56_fu_2031_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        F_address0 = tmp_22_fu_1395_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st118_fsm_117)) begin
        F_address0 = tmp_56_fu_2031_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        F_address0 = tmp_29_fu_1606_p1;
    end else begin
        F_address0 = 'bx;
    end
end

/// F_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st118_fsm_117)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st118_fsm_117))) begin
        F_ce0 = ap_const_logic_1;
    end else begin
        F_ce0 = ap_const_logic_0;
    end
end

/// F_we0 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        F_we0 = ap_const_logic_1;
    end else begin
        F_we0 = ap_const_logic_0;
    end
end

/// akt_address0 assign process. ///
always @ (ap_sig_cseq_ST_st76_fsm_75 or ap_sig_cseq_ST_st25_fsm_24 or tmp_22_fu_1395_p1 or tmp_33_fu_1978_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        akt_address0 = tmp_22_fu_1395_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75)) begin
        akt_address0 = tmp_33_fu_1978_p1;
    end else begin
        akt_address0 = 'bx;
    end
end

/// akt_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st76_fsm_75 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24))) begin
        akt_ce0 = ap_const_logic_1;
    end else begin
        akt_ce0 = ap_const_logic_0;
    end
end

/// akt_we0 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        akt_we0 = ap_const_logic_1;
    end else begin
        akt_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or icmp_reg_3273 or tmp_107_reg_3676 or ap_sig_cseq_ST_st133_fsm_132 or tmp_79_fu_3046_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & ((ap_const_lv1_0 == icmp_reg_3273) | ~(ap_const_lv1_0 == tmp_107_reg_3676) | ~(ap_const_lv1_0 == tmp_79_fu_3046_p2))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (icmp_reg_3273 or tmp_107_reg_3676 or ap_sig_cseq_ST_st133_fsm_132 or tmp_79_fu_3046_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & ((ap_const_lv1_0 == icmp_reg_3273) | ~(ap_const_lv1_0 == tmp_107_reg_3676) | ~(ap_const_lv1_0 == tmp_79_fu_3046_p2)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_return assign process. ///
always @ (icmp_reg_3273 or tmp_107_reg_3676 or ap_sig_cseq_ST_st133_fsm_132 or tmp_79_fu_3046_p2 or p_0_phi_fu_992_p4 or ap_return_preg)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & ((ap_const_lv1_0 == icmp_reg_3273) | ~(ap_const_lv1_0 == tmp_107_reg_3676) | ~(ap_const_lv1_0 == tmp_79_fu_3046_p2)))) begin
        ap_return = p_0_phi_fu_992_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

/// ap_sig_cseq_ST_st100_fsm_99 assign process. ///
always @ (ap_sig_bdd_1257)
begin
    if (ap_sig_bdd_1257) begin
        ap_sig_cseq_ST_st100_fsm_99 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st100_fsm_99 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st103_fsm_102 assign process. ///
always @ (ap_sig_bdd_366)
begin
    if (ap_sig_bdd_366) begin
        ap_sig_cseq_ST_st103_fsm_102 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st103_fsm_102 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st104_fsm_103 assign process. ///
always @ (ap_sig_bdd_1230)
begin
    if (ap_sig_bdd_1230) begin
        ap_sig_cseq_ST_st104_fsm_103 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st104_fsm_103 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st108_fsm_107 assign process. ///
always @ (ap_sig_bdd_374)
begin
    if (ap_sig_bdd_374) begin
        ap_sig_cseq_ST_st108_fsm_107 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st108_fsm_107 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st109_fsm_108 assign process. ///
always @ (ap_sig_bdd_921)
begin
    if (ap_sig_bdd_921) begin
        ap_sig_cseq_ST_st109_fsm_108 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st109_fsm_108 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_249)
begin
    if (ap_sig_bdd_249) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st110_fsm_109 assign process. ///
always @ (ap_sig_bdd_689)
begin
    if (ap_sig_bdd_689) begin
        ap_sig_cseq_ST_st110_fsm_109 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st110_fsm_109 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st111_fsm_110 assign process. ///
always @ (ap_sig_bdd_301)
begin
    if (ap_sig_bdd_301) begin
        ap_sig_cseq_ST_st111_fsm_110 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st111_fsm_110 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st112_fsm_111 assign process. ///
always @ (ap_sig_bdd_1237)
begin
    if (ap_sig_bdd_1237) begin
        ap_sig_cseq_ST_st112_fsm_111 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st112_fsm_111 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st116_fsm_115 assign process. ///
always @ (ap_sig_bdd_382)
begin
    if (ap_sig_bdd_382) begin
        ap_sig_cseq_ST_st116_fsm_115 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st116_fsm_115 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st117_fsm_116 assign process. ///
always @ (ap_sig_bdd_928)
begin
    if (ap_sig_bdd_928) begin
        ap_sig_cseq_ST_st117_fsm_116 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st117_fsm_116 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st118_fsm_117 assign process. ///
always @ (ap_sig_bdd_708)
begin
    if (ap_sig_bdd_708) begin
        ap_sig_cseq_ST_st118_fsm_117 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st118_fsm_117 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st119_fsm_118 assign process. ///
always @ (ap_sig_bdd_724)
begin
    if (ap_sig_bdd_724) begin
        ap_sig_cseq_ST_st119_fsm_118 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st119_fsm_118 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_1279)
begin
    if (ap_sig_bdd_1279) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st120_fsm_119 assign process. ///
always @ (ap_sig_bdd_739)
begin
    if (ap_sig_bdd_739) begin
        ap_sig_cseq_ST_st120_fsm_119 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st120_fsm_119 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st121_fsm_120 assign process. ///
always @ (ap_sig_bdd_755)
begin
    if (ap_sig_bdd_755) begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st122_fsm_121 assign process. ///
always @ (ap_sig_bdd_770)
begin
    if (ap_sig_bdd_770) begin
        ap_sig_cseq_ST_st122_fsm_121 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st122_fsm_121 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st123_fsm_122 assign process. ///
always @ (ap_sig_bdd_790)
begin
    if (ap_sig_bdd_790) begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st124_fsm_123 assign process. ///
always @ (ap_sig_bdd_801)
begin
    if (ap_sig_bdd_801) begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st125_fsm_124 assign process. ///
always @ (ap_sig_bdd_810)
begin
    if (ap_sig_bdd_810) begin
        ap_sig_cseq_ST_st125_fsm_124 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st125_fsm_124 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st126_fsm_125 assign process. ///
always @ (ap_sig_bdd_1027)
begin
    if (ap_sig_bdd_1027) begin
        ap_sig_cseq_ST_st126_fsm_125 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st126_fsm_125 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st127_fsm_126 assign process. ///
always @ (ap_sig_bdd_866)
begin
    if (ap_sig_bdd_866) begin
        ap_sig_cseq_ST_st127_fsm_126 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st127_fsm_126 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st128_fsm_127 assign process. ///
always @ (ap_sig_bdd_1100)
begin
    if (ap_sig_bdd_1100) begin
        ap_sig_cseq_ST_st128_fsm_127 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st128_fsm_127 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st132_fsm_131 assign process. ///
always @ (ap_sig_bdd_390)
begin
    if (ap_sig_bdd_390) begin
        ap_sig_cseq_ST_st132_fsm_131 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st132_fsm_131 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st133_fsm_132 assign process. ///
always @ (ap_sig_bdd_1034)
begin
    if (ap_sig_bdd_1034) begin
        ap_sig_cseq_ST_st133_fsm_132 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st133_fsm_132 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_1206)
begin
    if (ap_sig_bdd_1206) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_151)
begin
    if (ap_sig_bdd_151) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_311)
begin
    if (ap_sig_bdd_311) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_498)
begin
    if (ap_sig_bdd_498) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_511)
begin
    if (ap_sig_bdd_511) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_1289)
begin
    if (ap_sig_bdd_1289) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_522)
begin
    if (ap_sig_bdd_522) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_531)
begin
    if (ap_sig_bdd_531) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_440)
begin
    if (ap_sig_bdd_440) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_542)
begin
    if (ap_sig_bdd_542) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_551)
begin
    if (ap_sig_bdd_551) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_566)
begin
    if (ap_sig_bdd_566) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_599)
begin
    if (ap_sig_bdd_599) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_608)
begin
    if (ap_sig_bdd_608) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_619)
begin
    if (ap_sig_bdd_619) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_451)
begin
    if (ap_sig_bdd_451) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_39 assign process. ///
always @ (ap_sig_bdd_634)
begin
    if (ap_sig_bdd_634) begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_643)
begin
    if (ap_sig_bdd_643) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_400)
begin
    if (ap_sig_bdd_400) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_42 assign process. ///
always @ (ap_sig_bdd_292)
begin
    if (ap_sig_bdd_292) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_43 assign process. ///
always @ (ap_sig_bdd_275)
begin
    if (ap_sig_bdd_275) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st48_fsm_47 assign process. ///
always @ (ap_sig_bdd_318)
begin
    if (ap_sig_bdd_318) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st49_fsm_48 assign process. ///
always @ (ap_sig_bdd_240)
begin
    if (ap_sig_bdd_240) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_49 assign process. ///
always @ (ap_sig_bdd_412)
begin
    if (ap_sig_bdd_412) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_53 assign process. ///
always @ (ap_sig_bdd_326)
begin
    if (ap_sig_bdd_326) begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_54 assign process. ///
always @ (ap_sig_bdd_912)
begin
    if (ap_sig_bdd_912) begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_69 assign process. ///
always @ (ap_sig_bdd_1059)
begin
    if (ap_sig_bdd_1059) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_70 assign process. ///
always @ (ap_sig_bdd_256)
begin
    if (ap_sig_bdd_256) begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st72_fsm_71 assign process. ///
always @ (ap_sig_bdd_1213)
begin
    if (ap_sig_bdd_1213) begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st76_fsm_75 assign process. ///
always @ (ap_sig_bdd_334)
begin
    if (ap_sig_bdd_334) begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_76 assign process. ///
always @ (ap_sig_bdd_670)
begin
    if (ap_sig_bdd_670) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st80_fsm_79 assign process. ///
always @ (ap_sig_bdd_422)
begin
    if (ap_sig_bdd_422) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st81_fsm_80 assign process. ///
always @ (ap_sig_bdd_1221)
begin
    if (ap_sig_bdd_1221) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st85_fsm_84 assign process. ///
always @ (ap_sig_bdd_342)
begin
    if (ap_sig_bdd_342) begin
        ap_sig_cseq_ST_st85_fsm_84 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st85_fsm_84 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st86_fsm_85 assign process. ///
always @ (ap_sig_bdd_1140)
begin
    if (ap_sig_bdd_1140) begin
        ap_sig_cseq_ST_st86_fsm_85 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st86_fsm_85 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_233)
begin
    if (ap_sig_bdd_233) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st90_fsm_89 assign process. ///
always @ (ap_sig_bdd_350)
begin
    if (ap_sig_bdd_350) begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st91_fsm_90 assign process. ///
always @ (ap_sig_bdd_1250)
begin
    if (ap_sig_bdd_1250) begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st93_fsm_92 assign process. ///
always @ (ap_sig_bdd_1150)
begin
    if (ap_sig_bdd_1150) begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st94_fsm_93 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st95_fsm_94 assign process. ///
always @ (ap_sig_bdd_283)
begin
    if (ap_sig_bdd_283) begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st98_fsm_97 assign process. ///
always @ (ap_sig_bdd_678)
begin
    if (ap_sig_bdd_678) begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st99_fsm_98 assign process. ///
always @ (ap_sig_bdd_358)
begin
    if (ap_sig_bdd_358) begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_477)
begin
    if (ap_sig_bdd_477) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// back_gauss_address0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st122_fsm_121 or ap_sig_cseq_ST_st126_fsm_125 or tmp_31_fu_1228_p1 or tmp_89_fu_2354_p1 or tmp_95_fu_2906_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125)) begin
        back_gauss_address0 = tmp_95_fu_2906_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121)) begin
        back_gauss_address0 = tmp_89_fu_2354_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        back_gauss_address0 = tmp_31_fu_1228_p1;
    end else begin
        back_gauss_address0 = 'bx;
    end
end

/// back_gauss_address1 assign process. ///
always @ (ap_sig_cseq_ST_st122_fsm_121 or ap_sig_cseq_ST_st126_fsm_125 or tmp_91_fu_2371_p1 or tmp_93_fu_2888_p1 or tmp_96_fu_3006_p1 or ap_sig_cseq_ST_st128_fsm_127)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_127)) begin
        back_gauss_address1 = tmp_96_fu_3006_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125)) begin
        back_gauss_address1 = tmp_93_fu_2888_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121)) begin
        back_gauss_address1 = tmp_91_fu_2371_p1;
    end else begin
        back_gauss_address1 = 'bx;
    end
end

/// back_gauss_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st122_fsm_121 or ap_sig_cseq_ST_st126_fsm_125)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) | (ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125))) begin
        back_gauss_ce0 = ap_const_logic_1;
    end else begin
        back_gauss_ce0 = ap_const_logic_0;
    end
end

/// back_gauss_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st122_fsm_121 or ap_sig_cseq_ST_st126_fsm_125 or ap_sig_cseq_ST_st128_fsm_127)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) | (ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_127))) begin
        back_gauss_ce1 = ap_const_logic_1;
    end else begin
        back_gauss_ce1 = ap_const_logic_0;
    end
end

/// back_gauss_d1 assign process. ///
always @ (ap_sig_cseq_ST_st122_fsm_121 or ap_sig_cseq_ST_st126_fsm_125 or ap_sig_cseq_ST_st128_fsm_127)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_127)) begin
        back_gauss_d1 = ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) | (ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125))) begin
        back_gauss_d1 = ap_const_lv1_0;
    end else begin
        back_gauss_d1 = 'bx;
    end
end

/// back_gauss_we0 assign process. ///
always @ (ap_sig_cseq_ST_st122_fsm_121 or exitcond_fu_2248_p2 or ap_sig_cseq_ST_st126_fsm_125)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125) | ((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & ~(ap_const_lv1_0 == exitcond_fu_2248_p2)))) begin
        back_gauss_we0 = ap_const_logic_1;
    end else begin
        back_gauss_we0 = ap_const_logic_0;
    end
end

/// back_gauss_we1 assign process. ///
always @ (ap_sig_cseq_ST_st122_fsm_121 or exitcond_fu_2248_p2 or ap_sig_cseq_ST_st126_fsm_125 or ap_sig_cseq_ST_st128_fsm_127)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st126_fsm_125) | ((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & ~(ap_const_lv1_0 == exitcond_fu_2248_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_127))) begin
        back_gauss_we1 = ap_const_logic_1;
    end else begin
        back_gauss_we1 = ap_const_logic_0;
    end
end

/// grp_fu_1001_opcode assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st95_fsm_94 or ap_sig_cseq_ST_st99_fsm_98 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st128_fsm_127 or ap_sig_cseq_ST_st86_fsm_85 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st81_fsm_80 or ap_sig_cseq_ST_st104_fsm_103 or ap_sig_cseq_ST_st112_fsm_111)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94) | (ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98) | (ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st112_fsm_111))) begin
        grp_fu_1001_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_127) | (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st104_fsm_103))) begin
        grp_fu_1001_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_1001_opcode = 'bx;
    end
end

/// grp_fu_1001_p0 assign process. ///
always @ (reg_1083 or reg_1089 or reg_1095 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st95_fsm_94 or reg_1111 or ap_sig_cseq_ST_st99_fsm_98 or ap_sig_cseq_ST_st50_fsm_49 or reg_1138 or B_reg_965 or ap_sig_cseq_ST_st128_fsm_127 or matchsumtot_fu_162 or ap_sig_cseq_ST_st86_fsm_85 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st81_fsm_80 or ap_sig_cseq_ST_st104_fsm_103 or ap_sig_cseq_ST_st112_fsm_111)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_127)) begin
        grp_fu_1001_p0 = B_reg_965;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st104_fsm_103)) begin
        grp_fu_1001_p0 = reg_1095;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94)) begin
        grp_fu_1001_p0 = reg_1138;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        grp_fu_1001_p0 = reg_1089;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_1001_p0 = matchsumtot_fu_162;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | (ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98) | (ap_const_logic_1 == ap_sig_cseq_ST_st112_fsm_111))) begin
        grp_fu_1001_p0 = reg_1111;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71))) begin
        grp_fu_1001_p0 = reg_1083;
    end else begin
        grp_fu_1001_p0 = 'bx;
    end
end

/// grp_fu_1001_p1 assign process. ///
always @ (alpha_w or reg_1083 or reg_1089 or reg_1095 or reg_1103 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st95_fsm_94 or reg_1119 or ap_sig_cseq_ST_st99_fsm_98 or ap_sig_cseq_ST_st50_fsm_49 or reg_1138 or tmp_44_reg_3401 or sorted_weight_0_2_reg_3685 or ap_sig_cseq_ST_st128_fsm_127 or ap_sig_cseq_ST_st86_fsm_85 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st81_fsm_80 or ap_sig_cseq_ST_st104_fsm_103 or ap_sig_cseq_ST_st112_fsm_111)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_127)) begin
        grp_fu_1001_p1 = sorted_weight_0_2_reg_3685;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st112_fsm_111)) begin
        grp_fu_1001_p1 = reg_1103;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98)) begin
        grp_fu_1001_p1 = tmp_44_reg_3401;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94)) begin
        grp_fu_1001_p1 = reg_1095;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85)) begin
        grp_fu_1001_p1 = reg_1119;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st104_fsm_103))) begin
        grp_fu_1001_p1 = reg_1138;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_1001_p1 = reg_1083;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_1001_p1 = alpha_w;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71))) begin
        grp_fu_1001_p1 = reg_1089;
    end else begin
        grp_fu_1001_p1 = 'bx;
    end
end

/// grp_fu_1010_p0 assign process. ///
always @ (alpha_w or akt_q0 or ap_sig_cseq_ST_st95_fsm_94 or reg_1119 or akt_load_reg_3396 or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st91_fsm_90 or ap_sig_cseq_ST_st100_fsm_99)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st100_fsm_99)) begin
        grp_fu_1010_p0 = akt_load_reg_3396;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94)) begin
        grp_fu_1010_p0 = alpha_w;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90)) begin
        grp_fu_1010_p0 = reg_1119;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        grp_fu_1010_p0 = akt_q0;
    end else begin
        grp_fu_1010_p0 = 'bx;
    end
end

/// grp_fu_1010_p1 assign process. ///
always @ (weight_q0 or ap_sig_cseq_ST_st95_fsm_94 or reg_1119 or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st91_fsm_90 or ap_sig_cseq_ST_st100_fsm_99)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94)) begin
        grp_fu_1010_p1 = weight_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90) | (ap_const_logic_1 == ap_sig_cseq_ST_st100_fsm_99))) begin
        grp_fu_1010_p1 = reg_1119;
    end else begin
        grp_fu_1010_p1 = 'bx;
    end
end

/// grp_fu_1016_p0 assign process. ///
always @ (alpha_w or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st42_fsm_41)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        grp_fu_1016_p0 = ap_const_lv32_3F800000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_1016_p0 = alpha_w;
    end else begin
        grp_fu_1016_p0 = 'bx;
    end
end

/// grp_fu_1016_p1 assign process. ///
always @ (weight_q0 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st42_fsm_41 or matchsumtot_fu_162)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        grp_fu_1016_p1 = matchsumtot_fu_162;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_1016_p1 = weight_q0;
    end else begin
        grp_fu_1016_p1 = 'bx;
    end
end

/// grp_fu_1034_p0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st3_fsm_2 or tmp_20_fu_1188_p1 or tmp_61_fu_1962_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_1034_p0 = tmp_61_fu_1962_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_1034_p0 = tmp_20_fu_1188_p1;
    end else begin
        grp_fu_1034_p0 = 'bx;
    end
end

/// grp_fu_1040_opcode assign process. ///
always @ (ap_sig_cseq_ST_st42_fsm_41 or exitcond3_fu_1891_p2 or icmp_reg_3273 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st124_fsm_123 or tmp_107_reg_3676 or ap_sig_cseq_ST_st133_fsm_132)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & ~(ap_const_lv1_0 == icmp_reg_3273) & (ap_const_lv1_0 == tmp_107_reg_3676))) begin
        grp_fu_1040_opcode = ap_const_lv5_3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(exitcond3_fu_1891_p2 == ap_const_lv1_0))) begin
        grp_fu_1040_opcode = ap_const_lv5_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123))) begin
        grp_fu_1040_opcode = ap_const_lv5_2;
    end else begin
        grp_fu_1040_opcode = 'bx;
    end
end

/// grp_fu_1040_p0 assign process. ///
always @ (reg_1119 or ap_sig_cseq_ST_st42_fsm_41 or max_F_4_reg_3304 or ap_sig_cseq_ST_st34_fsm_33 or sorted_F_3_23_reg_3516 or ap_sig_cseq_ST_st124_fsm_123 or ap_sig_cseq_ST_st133_fsm_132 or matchsumtot_fu_162)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132)) begin
        grp_fu_1040_p0 = reg_1119;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        grp_fu_1040_p0 = sorted_F_3_23_reg_3516;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        grp_fu_1040_p0 = matchsumtot_fu_162;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_1040_p0 = max_F_4_reg_3304;
    end else begin
        grp_fu_1040_p0 = 'bx;
    end
end

/// grp_fu_1040_p1 assign process. ///
always @ (ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st124_fsm_123 or max_F_reg_538 or sorted_F_1_reg_947 or ap_sig_cseq_ST_st133_fsm_132)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132)) begin
        grp_fu_1040_p1 = ap_const_lv32_3F333333;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        grp_fu_1040_p1 = sorted_F_1_reg_947;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        grp_fu_1040_p1 = ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_1040_p1 = max_F_reg_538;
    end else begin
        grp_fu_1040_p1 = 'bx;
    end
end

/// matchsum_address0 assign process. ///
always @ (ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st32_fsm_31 or matchsum_addr_reg_3299 or tmp_58_fu_1871_p1 or ap_sig_cseq_ST_st41_fsm_40 or tmp_54_fu_1683_p1 or tmp_73_fu_1914_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        matchsum_address0 = matchsum_addr_reg_3299;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        matchsum_address0 = tmp_58_fu_1871_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        matchsum_address0 = tmp_73_fu_1914_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        matchsum_address0 = tmp_54_fu_1683_p1;
    end else begin
        matchsum_address0 = 'bx;
    end
end

/// matchsum_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st41_fsm_40)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        matchsum_ce0 = ap_const_logic_1;
    end else begin
        matchsum_ce0 = ap_const_logic_0;
    end
end

/// matchsum_d0 assign process. ///
always @ (ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st41_fsm_40 or tmp_47_fu_1971_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        matchsum_d0 = tmp_47_fu_1971_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        matchsum_d0 = ap_const_lv8_1;
    end else begin
        matchsum_d0 = 'bx;
    end
end

/// matchsum_we0 assign process. ///
always @ (ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st41_fsm_40)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        matchsum_we0 = ap_const_logic_1;
    end else begin
        matchsum_we0 = ap_const_logic_0;
    end
end

/// mean_address0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st32_fsm_31 or mean_addr_4_reg_3284 or tmp_58_fu_1871_p1 or ap_sig_cseq_ST_st41_fsm_40 or tmp_31_fu_1228_p1 or tmp_54_fu_1683_p1 or ap_sig_cseq_ST_st86_fsm_85)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85)) begin
        mean_address0 = mean_addr_4_reg_3284;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        mean_address0 = tmp_58_fu_1871_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        mean_address0 = tmp_54_fu_1683_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        mean_address0 = tmp_31_fu_1228_p1;
    end else begin
        mean_address0 = 'bx;
    end
end

/// mean_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st86_fsm_85)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85))) begin
        mean_ce0 = ap_const_logic_1;
    end else begin
        mean_ce0 = ap_const_logic_0;
    end
end

/// mean_d0 assign process. ///
always @ (reg_1119 or tmp_48_reg_3344 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st86_fsm_85)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85)) begin
        mean_d0 = reg_1119;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        mean_d0 = tmp_48_reg_3344;
    end else begin
        mean_d0 = 'bx;
    end
end

/// mean_we0 assign process. ///
always @ (ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st86_fsm_85)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85))) begin
        mean_we0 = ap_const_logic_1;
    end else begin
        mean_we0 = ap_const_logic_0;
    end
end

/// p_0_phi_fu_992_p4 assign process. ///
always @ (icmp_reg_3273 or tmp_107_reg_3676 or ap_sig_cseq_ST_st133_fsm_132 or tmp_79_fu_3046_p2 or p_0_reg_988)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st133_fsm_132) & ((~(ap_const_lv1_0 == icmp_reg_3273) & ~(ap_const_lv1_0 == tmp_107_reg_3676)) | (~(ap_const_lv1_0 == icmp_reg_3273) & ~(ap_const_lv1_0 == tmp_79_fu_3046_p2))))) begin
        p_0_phi_fu_992_p4 = ap_const_lv1_0;
    end else begin
        p_0_phi_fu_992_p4 = p_0_reg_988;
    end
end

/// sigma_address0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or sigma_addr_4_reg_3289 or tmp_58_fu_1871_p1 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st109_fsm_108 or tmp_31_fu_1228_p1 or ap_sig_cseq_ST_st93_fsm_92)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        sigma_address0 = tmp_58_fu_1871_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108) | (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92))) begin
        sigma_address0 = sigma_addr_4_reg_3289;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sigma_address0 = tmp_31_fu_1228_p1;
    end else begin
        sigma_address0 = 'bx;
    end
end

/// sigma_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st109_fsm_108 or ap_sig_cseq_ST_st93_fsm_92)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108) | (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92))) begin
        sigma_ce0 = ap_const_logic_1;
    end else begin
        sigma_ce0 = ap_const_logic_0;
    end
end

/// sigma_d0 assign process. ///
always @ (vinit or reg_1119 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st109_fsm_108)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108)) begin
        sigma_d0 = reg_1119;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        sigma_d0 = vinit;
    end else begin
        sigma_d0 = 'bx;
    end
end

/// sigma_we0 assign process. ///
always @ (ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st109_fsm_108)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108))) begin
        sigma_we0 = ap_const_logic_1;
    end else begin
        sigma_we0 = ap_const_logic_0;
    end
end

/// weight_address0 assign process. ///
always @ (ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st94_fsm_93 or ap_sig_cseq_ST_st42_fsm_41 or exitcond3_fu_1891_p2 or ap_sig_cseq_ST_st9_fsm_8 or weight_addr_reg_3294 or tmp_58_reg_3349 or tmp_52_fu_1903_p2 or weight_addr_8_reg_3367 or tmp_70_fu_1956_p2 or ap_sig_cseq_ST_st110_fsm_109 or weight_addr_5_reg_3423 or ap_sig_cseq_ST_st120_fsm_119 or ap_sig_cseq_ST_st109_fsm_108 or ap_sig_cseq_ST_st117_fsm_116 or ap_sig_cseq_ST_st70_fsm_69 or tmp_31_fu_1228_p1 or tmp_73_fu_1914_p1 or weight_addr_6_gep_fu_342_p3 or tmp_72_fu_2014_p1 or tmp_74_fu_2148_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        weight_address0 = weight_addr_5_reg_3423;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        weight_address0 = weight_addr_6_gep_fu_342_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        weight_address0 = weight_addr_8_reg_3367;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(exitcond3_fu_1891_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_70_fu_1956_p2))) begin
        weight_address0 = tmp_58_reg_3349;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119)) begin
        weight_address0 = tmp_74_fu_2148_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st110_fsm_109)) begin
        weight_address0 = tmp_72_fu_2014_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) | (ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108))) begin
        weight_address0 = weight_addr_reg_3294;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & (exitcond3_fu_1891_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_52_fu_1903_p2))) begin
        weight_address0 = tmp_73_fu_1914_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        weight_address0 = tmp_31_fu_1228_p1;
    end else begin
        weight_address0 = 'bx;
    end
end

/// weight_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st94_fsm_93 or ap_sig_cseq_ST_st42_fsm_41 or exitcond3_fu_1891_p2 or ap_sig_cseq_ST_st9_fsm_8 or tmp_52_fu_1903_p2 or tmp_70_fu_1956_p2 or ap_sig_cseq_ST_st110_fsm_109 or ap_sig_cseq_ST_st120_fsm_119 or ap_sig_cseq_ST_st109_fsm_108 or ap_sig_cseq_ST_st117_fsm_116 or ap_sig_cseq_ST_st70_fsm_69)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48) | (ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & (exitcond3_fu_1891_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_52_fu_1903_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st110_fsm_109) | (ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) | (ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108) | (ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116) | (ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69) | ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(exitcond3_fu_1891_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_70_fu_1956_p2)))) begin
        weight_ce0 = ap_const_logic_1;
    end else begin
        weight_ce0 = ap_const_logic_0;
    end
end

/// weight_d0 assign process. ///
always @ (ap_sig_cseq_ST_st49_fsm_48 or reg_1119 or ap_sig_cseq_ST_st42_fsm_41 or exitcond3_fu_1891_p2 or tmp_70_fu_1956_p2 or tmp_46_reg_3406 or ap_sig_cseq_ST_st109_fsm_108 or ap_sig_cseq_ST_st117_fsm_116 or ap_sig_cseq_ST_st70_fsm_69 or grp_fu_1016_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108)) begin
        weight_d0 = tmp_46_reg_3406;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        weight_d0 = grp_fu_1016_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48) | (ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116))) begin
        weight_d0 = reg_1119;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(exitcond3_fu_1891_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_70_fu_1956_p2))) begin
        weight_d0 = ap_const_lv32_3D8F5C29;
    end else begin
        weight_d0 = 'bx;
    end
end

/// weight_we0 assign process. ///
always @ (ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st42_fsm_41 or exitcond3_fu_1891_p2 or tmp_70_fu_1956_p2 or tmp_70_reg_3377 or tmp_50_reg_3419 or ap_sig_cseq_ST_st109_fsm_108 or ap_sig_cseq_ST_st117_fsm_116 or ap_sig_cseq_ST_st70_fsm_69)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48) | (ap_const_logic_1 == ap_sig_cseq_ST_st109_fsm_108) | ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(exitcond3_fu_1891_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_70_fu_1956_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69) & (ap_const_lv1_0 == tmp_70_reg_3377)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116) & (ap_const_lv1_0 == tmp_50_reg_3419)))) begin
        weight_we0 = ap_const_logic_1;
    end else begin
        weight_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond3_fu_1891_p2 or tmp_s_reg_3092 or exitcond6_fu_1207_p2 or exitcond5_fu_1594_p2 or icmp_fu_1667_p2 or icmp_reg_3273 or tmp_52_fu_1903_p2 or tmp_70_fu_1956_p2 or tmp_50_fu_2003_p2 or exitcond4_fu_1991_p2 or exitcond2_fu_2019_p2 or exitcond1_fu_2127_p2 or exitcond_fu_2248_p2 or tmp_69_fu_2439_p2 or tmp_107_fu_2911_p3 or tmp_107_reg_3676 or tmp_79_fu_3046_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == tmp_s_reg_3092)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            if (~(ap_const_lv1_0 == exitcond6_fu_1207_p2)) begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st32_fsm_31 : 
        begin
            if ((~(ap_const_lv1_0 == exitcond5_fu_1594_p2) & ~(ap_const_lv1_0 == icmp_fu_1667_p2))) begin
                ap_NS_fsm = ap_ST_st71_fsm_70;
            end else if ((~(ap_const_lv1_0 == exitcond5_fu_1594_p2) & (ap_const_lv1_0 == icmp_fu_1667_p2))) begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            if ((~(exitcond3_fu_1891_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_70_fu_1956_p2))) begin
                ap_NS_fsm = ap_ST_st70_fsm_69;
            end else if ((~(exitcond3_fu_1891_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_70_fu_1956_p2))) begin
                ap_NS_fsm = ap_ST_st56_fsm_55;
            end else if (((exitcond3_fu_1891_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_52_fu_1903_p2))) begin
                ap_NS_fsm = ap_ST_st55_fsm_54;
            end else begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : 
        begin
            if (((ap_const_lv1_0 == exitcond4_fu_1991_p2) & ~(ap_const_lv1_0 == tmp_50_fu_2003_p2))) begin
                ap_NS_fsm = ap_ST_st117_fsm_116;
            end else if (((ap_const_lv1_0 == exitcond4_fu_1991_p2) & (ap_const_lv1_0 == tmp_50_fu_2003_p2))) begin
                ap_NS_fsm = ap_ST_st111_fsm_110;
            end else begin
                ap_NS_fsm = ap_ST_st118_fsm_117;
            end
        end
        ap_ST_st111_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st115_fsm_114;
        end
        ap_ST_st115_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st118_fsm_117 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_2019_p2)) begin
                ap_NS_fsm = ap_ST_st120_fsm_119;
            end else begin
                ap_NS_fsm = ap_ST_st119_fsm_118;
            end
        end
        ap_ST_st119_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st120_fsm_119 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_2127_p2)) begin
                ap_NS_fsm = ap_ST_st122_fsm_121;
            end else begin
                ap_NS_fsm = ap_ST_st121_fsm_120;
            end
        end
        ap_ST_st121_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st122_fsm_121 : 
        begin
            if ((ap_const_lv1_0 == exitcond_fu_2248_p2)) begin
                ap_NS_fsm = ap_ST_st123_fsm_122;
            end else begin
                ap_NS_fsm = ap_ST_st126_fsm_125;
            end
        end
        ap_ST_st123_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st124_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st125_fsm_124;
        end
        ap_ST_st125_fsm_124 : 
        begin
            if ((ap_const_lv1_0 == tmp_69_fu_2439_p2)) begin
                ap_NS_fsm = ap_ST_st122_fsm_121;
            end else begin
                ap_NS_fsm = ap_ST_st123_fsm_122;
            end
        end
        ap_ST_st126_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : 
        begin
            if (~(ap_const_lv1_0 == tmp_107_fu_2911_p3)) begin
                ap_NS_fsm = ap_ST_st133_fsm_132;
            end else begin
                ap_NS_fsm = ap_ST_st128_fsm_127;
            end
        end
        ap_ST_st128_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_128;
        end
        ap_ST_st129_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st130_fsm_129;
        end
        ap_ST_st130_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_130;
        end
        ap_ST_st131_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st132_fsm_131;
        end
        ap_ST_st132_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st133_fsm_132 : 
        begin
            if (((ap_const_lv1_0 == icmp_reg_3273) | ~(ap_const_lv1_0 == tmp_107_reg_3676) | ~(ap_const_lv1_0 == tmp_79_fu_3046_p2))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st127_fsm_126;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_1_to_int_fu_3010_p1 = reg_1119;
assign F_d0 = grp_fu_1022_p2;
assign M_0_4_fu_1584_p2 = (sel_tmp3_fu_1530_p2 | M_0_2_reg_469);
assign M_1_4_fu_1578_p2 = (sel_tmp10_fu_1572_p2 | M_1_2_reg_459);
assign M_1_load_reg_3101 = ap_const_lv1_0;
assign M_2_4_fu_1566_p2 = (sel_tmp8_fu_1560_p2 | M_2_2_reg_449);
assign M_2_load_reg_3106 = ap_const_lv1_0;
assign M_3_4_fu_1554_p2 = (sel_tmp6_fu_1548_p2 | M_3_2_reg_439);
assign M_3_load_reg_3111 = ap_const_lv1_0;
assign M_load_phi_fu_1649_p3 = ((sel_tmp15_fu_1643_p2)? M_0_2_reg_469: sel_tmp14_fu_1635_p3);
assign M_load_reg_3096 = ap_const_lv1_0;
assign abs_fu_1387_p3 = ((abscond_fu_1381_p2)? p_Val2_5_fu_1369_p3: neg_fu_1375_p2);
assign abscond_fu_1381_p2 = ($signed(p_Val2_5_fu_1369_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign akt_d0 = grp_fu_1016_p2;

/// ap_sig_bdd_1018 assign process. ///
always @ (tmp_108_fu_2382_p1)
begin
    ap_sig_bdd_1018 = (~(tmp_108_fu_2382_p1 == ap_const_lv2_2) & ~(tmp_108_fu_2382_p1 == ap_const_lv2_1) & ~(tmp_108_fu_2382_p1 == ap_const_lv2_0));
end

/// ap_sig_bdd_1027 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1027 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7D]);
end

/// ap_sig_bdd_1034 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1034 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_84]);
end

/// ap_sig_bdd_1059 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1059 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_1100 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7F]);
end

/// ap_sig_bdd_1140 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1140 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_55]);
end

/// ap_sig_bdd_1150 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1150 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5C]);
end

/// ap_sig_bdd_1206 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1206 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_1213 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1213 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_1221 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1221 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_1230 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1230 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_67]);
end

/// ap_sig_bdd_1237 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1237 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6F]);
end

/// ap_sig_bdd_1250 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1250 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end

/// ap_sig_bdd_1257 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1257 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_63]);
end

/// ap_sig_bdd_1279 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1279 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_1289 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1289 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_151 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_151 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_233 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_233 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_240 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_240 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_249 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_249 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_256 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_256 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

/// ap_sig_bdd_275 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_275 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_283 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_283 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_292 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_292 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_301 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_301 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6E]);
end

/// ap_sig_bdd_311 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_311 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_318 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_318 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end

/// ap_sig_bdd_326 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_326 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_334 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_334 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_342 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_342 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_54]);
end

/// ap_sig_bdd_350 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_350 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end

/// ap_sig_bdd_358 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_358 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_62]);
end

/// ap_sig_bdd_366 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_366 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_66]);
end

/// ap_sig_bdd_374 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_374 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6B]);
end

/// ap_sig_bdd_382 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_382 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_73]);
end

/// ap_sig_bdd_390 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_390 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_83]);
end

/// ap_sig_bdd_400 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_400 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_412 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_412 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_422 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_422 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_440 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_440 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_451 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_451 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_477 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_477 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_498 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_498 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_511 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_511 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_522 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_522 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_531 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_531 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_542 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_542 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_551 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_551 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_566 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_566 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_599 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_599 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_608 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_608 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_619 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_619 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_634 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_634 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end

/// ap_sig_bdd_643 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_643 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_670 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_670 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_678 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_678 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_61]);
end

/// ap_sig_bdd_689 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_689 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6D]);
end

/// ap_sig_bdd_708 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_708 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_75]);
end

/// ap_sig_bdd_724 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_724 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_76]);
end

/// ap_sig_bdd_739 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_739 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_77]);
end

/// ap_sig_bdd_755 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_755 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_78]);
end

/// ap_sig_bdd_770 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_770 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_79]);
end

/// ap_sig_bdd_790 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_790 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7A]);
end

/// ap_sig_bdd_801 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_801 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7B]);
end

/// ap_sig_bdd_810 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_810 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7C]);
end

/// ap_sig_bdd_866 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_866 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7E]);
end

/// ap_sig_bdd_912 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_912 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_921 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_921 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6C]);
end

/// ap_sig_bdd_928 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_928 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_74]);
end
assign back_gauss_d0 = ap_const_lv1_0;
assign exitcond1_fu_2127_p2 = (i4_reg_679 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond2_fu_2019_p2 = (i_reg_620 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond3_fu_1891_p2 = (j3_reg_550 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond4_fu_1991_p2 = (j2_reg_561 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond5_fu_1594_p2 = (max_val_2_reg_491 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond6_fu_1207_p2 = (j_reg_479 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond_fu_2248_p2 = (i6_reg_826 == ap_const_lv3_4? 1'b1: 1'b0);
assign grp_fu_1001_ce = ap_const_logic_1;
assign grp_fu_1005_ce = ap_const_logic_1;
assign grp_fu_1005_p0 = reg_1119;
assign grp_fu_1005_p1 = reg_1103;
assign grp_fu_1010_ce = ap_const_logic_1;
assign grp_fu_1016_ce = ap_const_logic_1;
assign grp_fu_1022_ce = ap_const_logic_1;
assign grp_fu_1022_p0 = weight_q0;
assign grp_fu_1022_p1 = sigma_q0;
assign grp_fu_1031_ce = ap_const_logic_1;
assign grp_fu_1031_p0 = pixel;
assign grp_fu_1034_ce = ap_const_logic_1;
assign grp_fu_1053_ce = ap_const_logic_1;
assign grp_fu_1053_p0 = ap_const_lv32_0;
assign grp_fu_1053_p1 = reg_1095;
assign grp_fu_1058_ce = ap_const_logic_1;
assign grp_fu_1058_p0 = tmp_24_reg_3198;
assign grp_fu_1058_p1 = ap_const_lv64_4004000000000000;
assign grp_fu_1067_ce = ap_const_logic_1;
assign grp_fu_1067_p0 = abs_reg_3193;
assign i6_cast_fu_2244_p1 = i6_reg_826;
assign i_4_fu_2025_p2 = (i_reg_620 + ap_const_lv3_1);
assign i_5_fu_2133_p2 = (i4_reg_679 + ap_const_lv3_1);
assign i_6_fu_2869_p2 = (i6_reg_826 + ap_const_lv3_1);
assign icmp_fu_1667_p2 = ($signed(tmp_76_fu_1657_p4) < $signed(30'b1)? 1'b1: 1'b0);
assign ind_1_fu_2919_p2 = (ind_reg_977 + ap_const_lv3_1);
assign index_0_12_fu_2862_p3 = ((sel_tmp35_fu_2674_p2)? index_3_8_reg_3533: index_0_11_reg_726);
assign index_0_1_fu_2801_p3 = ((sel_tmp33_fu_2647_p2)? index_3_1_reg_838: index_3_8_reg_3533);
assign index_0_2_fu_2808_p3 = ((sel_tmp34_fu_2660_p2)? index_3_1_reg_838: index_0_1_fu_2801_p3);
assign index_0_3_fu_2816_p3 = ((sel_tmp35_fu_2674_p2)? index_3_1_reg_838: index_0_2_fu_2808_p3);
assign index_0_4_fu_2824_p3 = ((sel_tmp33_fu_2647_p2)? index_3_8_reg_3533: index_2_1_reg_849);
assign index_0_5_fu_2831_p3 = ((sel_tmp34_fu_2660_p2)? index_2_1_reg_849: index_0_4_fu_2824_p3);
assign index_0_6_fu_2839_p3 = ((sel_tmp35_fu_2674_p2)? index_2_1_reg_849: index_0_5_fu_2831_p3);
assign index_0_8_fu_2847_p3 = ((sel_tmp34_fu_2660_p2)? index_3_8_reg_3533: index_1_6_reg_860);
assign index_0_9_fu_2854_p3 = ((sel_tmp35_fu_2674_p2)? index_1_6_reg_860: index_0_8_fu_2847_p3);
assign index_0_fu_2993_p3 = ((or_cond_fu_2979_p2)? newSel_fu_2971_p3: newSel1_fu_2985_p3);
assign index_1_1_fu_2627_p3 = ((sel_tmp29_fu_2462_p2)? index_2_1_reg_849: index_1_35_fu_2619_p3);
assign index_1_35_fu_2619_p3 = ((sel_tmp28_fu_2448_p2)? index_3_9_fu_2595_p3: index_2_1_reg_849);
assign index_1_3_fu_2635_p3 = ((sel_tmp29_fu_2462_p2)? index_3_9_fu_2595_p3: index_1_6_reg_860);
assign index_3_2_fu_2579_p3 = ((sel_tmp30_fu_2500_p2)? index_1_6_reg_860: index_3_1_reg_838);
assign index_3_30_fu_2302_p3 = ((sel_tmp23_fu_2258_p2)? index_2_reg_702: index_3_reg_690);
assign index_3_3_fu_2587_p3 = ((sel_tmp31_fu_2513_p2)? index_2_1_reg_849: index_3_2_fu_2579_p3);
assign index_3_5_fu_2603_p3 = ((sel_tmp28_fu_2448_p2)? index_3_1_reg_838: index_3_9_fu_2595_p3);
assign index_3_6_fu_2611_p3 = ((sel_tmp29_fu_2462_p2)? index_3_1_reg_838: index_3_5_fu_2603_p3);
assign index_3_8_fu_2310_p3 = ((sel_tmp24_fu_2272_p2)? index_1_reg_714: index_3_30_fu_2302_p3);
assign index_3_9_fu_2595_p3 = ((sel_tmp32_fu_2526_p2)? index_0_11_reg_726: index_3_3_fu_2587_p3);
assign indvarinc_fu_1144_p2 = (invdar_reg_428 + ap_const_lv2_1);
assign isNeg_fu_1284_p3 = sh_assign_fu_1278_p2[ap_const_lv32_8];
assign j2_cast_cast_fu_1987_p1 = j2_reg_561;
assign j2_cast_fu_1983_p1 = j2_reg_561;
assign j3_cast_cast_fu_1887_p1 = j3_reg_550;
assign j3_cast_fu_1883_p1 = j3_reg_550;
assign j_1_fu_1213_p2 = (j_reg_479 + ap_const_lv3_1);
assign j_2_fu_1600_p2 = (max_val_2_reg_491 + ap_const_lv3_1);
assign j_3_fu_1997_p2 = (j2_reg_561 + ap_const_lv3_1);
assign j_4_fu_1897_p2 = (j3_reg_550 + ap_const_lv3_1);
assign j_5_fu_2376_p2 = ($signed(j5_0_in_reg_937) + $signed(ap_const_lv32_FFFFFFFF));
assign loc_V_1_fu_1258_p1 = p_Val2_s_fu_1236_p1[22:0];
assign loc_V_fu_1248_p4 = {{p_Val2_s_fu_1236_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign matchsumtot_to_int_fu_1920_p1 = matchsumtot_fu_162;
assign max_F_1_to_int_fu_1691_p1 = max_F_4_reg_3304;
assign max_F_2_fu_1847_p3 = ((M_load_phi_reg_3261)? max_F_3_fu_1840_p3: max_F_reg_538);
assign max_F_3_fu_1840_p3 = ((sel_tmp16_fu_1822_p2)? max_F_4_reg_3304: max_F_reg_538);
assign max_F_to_int_fu_1708_p1 = max_F_reg_538;
assign max_val_3_cast_fu_1590_p1 = max_val_2_reg_491;
assign min_F_1_fu_1860_p3 = ((tmp_53_reg_3318)? max_F_4_reg_3304: min_F_reg_526);
assign min_F_to_int_fu_1774_p1 = min_F_reg_526;
assign min_val_1_fu_1854_p3 = ((tmp_53_reg_3318)? max_val_3_cast_reg_3247: min_val_reg_502);
assign min_val_2_fu_1826_p3 = ((sel_tmp16_fu_1822_p2)? max_val_3_cast_reg_3247: max_val_reg_514);
assign min_val_3_fu_1833_p3 = ((M_load_phi_reg_3261)? min_val_2_fu_1826_p3: max_val_reg_514);
assign neg_fu_1375_p2 = (ap_const_lv32_0 - p_Val2_5_fu_1369_p3);
assign newSel1_fu_2985_p3 = ((sel_tmp25_fu_2929_p2)? index_1_reg_714: index_3_reg_690);
assign newSel_fu_2971_p3 = ((sel_tmp27_fu_2957_p2)? index_0_11_reg_726: index_2_reg_702);
assign not_sel_tmp1_fu_1536_p2 = (sel_tmp3_fu_1530_p2 ^ ap_const_lv1_1);
assign not_sel_tmp_fu_1519_p2 = (sel_tmp_fu_1513_p2 ^ ap_const_lv1_1);
assign notlhs1_fu_1792_p2 = (tmp_30_fu_1778_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs2_fu_1938_p2 = (tmp_59_fu_1924_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs3_fu_1457_p2 = (tmp_3_fu_1425_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);
assign notlhs4_fu_3028_p2 = (tmp_75_fu_3014_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs5_fu_1726_p2 = (tmp_11_fu_1694_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs6_fu_2336_p2 = (tmp_80_fu_2322_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs7_fu_1744_p2 = (tmp_13_fu_1712_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs8_fu_2404_p2 = (tmp_82_fu_2390_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs_fu_1439_p2 = (tmp_1_fu_1408_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);
assign notrhs2_fu_1798_p2 = (tmp_101_fu_1788_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs3_fu_1944_p2 = (tmp_102_fu_1934_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs4_fu_1463_p2 = (tmp_66_fu_1435_p1 == ap_const_lv52_0? 1'b1: 1'b0);
assign notrhs5_fu_3034_p2 = (tmp_110_fu_3024_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs6_fu_1732_p2 = (tmp_83_fu_1704_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs7_fu_2342_p2 = (tmp_106_fu_2332_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs8_fu_1750_p2 = (tmp_100_fu_1722_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs9_fu_2410_p2 = (tmp_111_fu_2400_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs_fu_1445_p2 = (tmp_64_fu_1418_p1 == ap_const_lv52_0? 1'b1: 1'b0);
assign or_cond_fu_2979_p2 = (sel_tmp27_fu_2957_p2 | sel_tmp26_fu_2943_p2);
assign p_Result_1_fu_1262_p3 = {{ap_const_lv1_1}, {loc_V_1_fu_1258_p1}};
assign p_Val2_3_fu_1356_p3 = ((isNeg_fu_1284_p3)? tmp_32_fu_1342_p1: tmp_40_fu_1346_p4);
assign p_Val2_5_fu_1369_p3 = ((p_Result_s_reg_3177)? p_Val2_7_i_i_fu_1364_p2: p_Val2_3_reg_3182);
assign p_Val2_7_i_i_fu_1364_p2 = (ap_const_lv32_0 - p_Val2_3_reg_3182);
assign p_Val2_s_fu_1236_p1 = reg_1119;
assign p_addr10_fu_3001_p2 = (p_addr6_reg_3129 + index_0_fu_2993_p3);
assign p_addr1_fu_1866_p2 = (p_addr6_reg_3129 + min_val_reg_502);
assign p_addr2_fu_2009_p2 = (p_addr6_cast_reg_3136 + j2_cast_cast_fu_1987_p1);
assign p_addr3_fu_2898_p3 = {{ap_const_lv13_0}, {tmp_94_fu_2893_p2}};
assign p_addr4_fu_1678_p2 = (p_addr6_reg_3129 + max_val_reg_514);
assign p_addr5_fu_1909_p2 = (p_addr6_cast_reg_3136 + j3_cast_cast_fu_1887_p1);
assign p_addr6_cast_fu_1203_p1 = tmp_27_fu_1192_p3;
assign p_addr6_fu_1199_p1 = tmp_27_fu_1192_p3;
assign p_addr7_fu_1223_p2 = (p_addr6_cast_reg_3136 + tmp_23_trn_cast_fu_1219_p1);
assign p_addr8_fu_2143_p2 = (p_addr6_cast_reg_3136 + tmp_63_trn_cast_fu_2139_p1);
assign p_addr9_fu_2363_p3 = {{ap_const_lv13_0}, {tmp_90_fu_2358_p2}};
assign p_addr_fu_2880_p3 = {{ap_const_lv13_0}, {tmp_92_fu_2875_p2}};
assign sel_tmp10_fu_1572_p2 = (sel_tmp_fu_1513_p2 & not_sel_tmp1_fu_1536_p2);
assign sel_tmp11_fu_1615_p2 = (tmp_81_fu_1611_p1 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp12_fu_1621_p3 = ((sel_tmp11_fu_1615_p2)? M_1_2_reg_459: M_3_2_reg_439);
assign sel_tmp13_fu_1629_p2 = (tmp_81_fu_1611_p1 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp14_fu_1635_p3 = ((sel_tmp13_fu_1629_p2)? M_2_2_reg_449: sel_tmp12_fu_1621_p3);
assign sel_tmp15_fu_1643_p2 = (tmp_81_fu_1611_p1 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp16_fu_1822_p2 = (M_load_phi_reg_3261 & tmp_19_reg_3313);
assign sel_tmp17_fu_2040_p2 = (tmp_103_reg_3441 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp18_fu_2053_p2 = (tmp_103_reg_3441 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp19_fu_2066_p2 = (tmp_103_reg_3441 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp1_fu_1525_p2 = (tmp_71_reg_3203 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp20_fu_2157_p2 = (tmp_104_reg_3481 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp21_fu_2170_p2 = (tmp_104_reg_3481 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp22_fu_2183_p2 = (tmp_104_reg_3481 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp23_fu_2258_p2 = (tmp_105_fu_2254_p1 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp24_fu_2272_p2 = (tmp_105_fu_2254_p1 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp25_fu_2929_p2 = (tmp_109_fu_2925_p1 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp26_fu_2943_p2 = (tmp_109_fu_2925_p1 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp27_fu_2957_p2 = (tmp_109_fu_2925_p1 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp28_fu_2448_p2 = (tmp_112_fu_2444_p1 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp29_fu_2462_p2 = (tmp_112_fu_2444_p1 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp2_fu_1487_p2 = (tmp_9_reg_3222 & back_gauss_load_reg_3172);
assign sel_tmp30_fu_2500_p2 = (tmp_108_reg_3551 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp31_fu_2513_p2 = (tmp_108_reg_3551 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp32_fu_2526_p2 = (tmp_108_reg_3551 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp33_fu_2647_p2 = (tmp_113_fu_2643_p1 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp34_fu_2660_p2 = (tmp_113_fu_2643_p1 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp35_fu_2674_p2 = (tmp_113_fu_2643_p1 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp3_fu_1530_p2 = (sel_tmp2_fu_1487_p2 & sel_tmp1_fu_1525_p2);
assign sel_tmp4_fu_1502_p2 = (sel_tmp7_fu_1496_p2 ^ sel_tmp2_fu_1487_p2);
assign sel_tmp5_fu_1491_p2 = (tmp_71_reg_3203 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp6_fu_1548_p2 = (tmp_fu_1542_p2 & sel_tmp4_fu_1502_p2);
assign sel_tmp7_fu_1496_p2 = (sel_tmp2_fu_1487_p2 & sel_tmp5_fu_1491_p2);
assign sel_tmp8_fu_1560_p2 = (tmp_fu_1542_p2 & sel_tmp7_fu_1496_p2);
assign sel_tmp9_fu_1508_p2 = (tmp_71_reg_3203 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp_fu_1513_p2 = (sel_tmp2_fu_1487_p2 & sel_tmp9_fu_1508_p2);
assign sh_assign_1_cast_cast_fu_1314_p1 = $signed(sh_assign_1_fu_1302_p3);
assign sh_assign_1_cast_fu_1310_p1 = $signed(sh_assign_1_fu_1302_p3);
assign sh_assign_1_fu_1302_p3 = ((isNeg_fu_1284_p3)? tmp_1_i_i_cast_fu_1298_p1: sh_assign_fu_1278_p2);
assign sh_assign_fu_1278_p2 = ($signed(tmp_i_i_i_cast_fu_1274_p1) + $signed(ap_const_lv9_181));
assign sorted_F_0_12_fu_2726_p3 = ((sel_tmp35_fu_2674_p2)? sorted_F_3_23_reg_3516: sorted_F_0_9_reg_815);
assign sorted_F_0_1_fu_2666_p3 = ((sel_tmp34_fu_2660_p2)? sorted_F_3_3_32_reg_904: sorted_F_0_fu_2653_p3);
assign sorted_F_0_1_to_int_fu_2318_p1 = sorted_F_3_23_fu_2278_p3;
assign sorted_F_0_2_fu_2680_p3 = ((sel_tmp35_fu_2674_p2)? sorted_F_3_3_32_reg_904: sorted_F_0_1_fu_2666_p3);
assign sorted_F_0_3_fu_2688_p3 = ((sel_tmp33_fu_2647_p2)? sorted_F_3_23_reg_3516: sorted_F_2_3_reg_915);
assign sorted_F_0_4_fu_2695_p3 = ((sel_tmp34_fu_2660_p2)? sorted_F_2_3_reg_915: sorted_F_0_3_fu_2688_p3);
assign sorted_F_0_5_fu_2703_p3 = ((sel_tmp35_fu_2674_p2)? sorted_F_2_3_reg_915: sorted_F_0_4_fu_2695_p3);
assign sorted_F_0_7_fu_2711_p3 = ((sel_tmp34_fu_2660_p2)? sorted_F_3_23_reg_3516: sorted_F_3_24_33_reg_926);
assign sorted_F_0_8_fu_2718_p3 = ((sel_tmp35_fu_2674_p2)? sorted_F_3_24_33_reg_926: sorted_F_0_7_fu_2711_p3);
assign sorted_F_0_fu_2653_p3 = ((sel_tmp33_fu_2647_p2)? sorted_F_3_3_32_reg_904: sorted_F_3_23_reg_3516);
assign sorted_F_1_to_int_fu_2386_p1 = sorted_F_1_reg_947;
assign sorted_F_3_10_fu_2454_p3 = ((sel_tmp28_fu_2448_p2)? sorted_F_3_3_32_reg_904: sorted_F_1_reg_947);
assign sorted_F_3_11_fu_2468_p3 = ((sel_tmp29_fu_2462_p2)? sorted_F_3_3_32_reg_904: sorted_F_3_10_fu_2454_p3);
assign sorted_F_3_12_fu_2476_p3 = ((sel_tmp28_fu_2448_p2)? sorted_F_1_reg_947: sorted_F_2_3_reg_915);
assign sorted_F_3_13_fu_2484_p3 = ((sel_tmp29_fu_2462_p2)? sorted_F_2_3_reg_915: sorted_F_3_12_fu_2476_p3);
assign sorted_F_3_16_fu_2119_p3 = ((sel_tmp19_fu_2066_p2)? F_q0: sorted_F_3_9_reg_608);
assign sorted_F_3_17_fu_2264_p3 = ((sel_tmp23_fu_2258_p2)? sorted_F_2_2_reg_793: sorted_F_3_2_28_reg_782);
assign sorted_F_3_1_fu_2058_p3 = ((sel_tmp18_fu_2053_p2)? sorted_F_3_reg_572: sorted_F_3_24_fu_2045_p3);
assign sorted_F_3_21_fu_2492_p3 = ((sel_tmp29_fu_2462_p2)? sorted_F_1_reg_947: sorted_F_3_24_33_reg_926);
assign sorted_F_3_23_fu_2278_p3 = ((sel_tmp24_fu_2272_p2)? sorted_F_1_2_reg_804: sorted_F_3_17_fu_2264_p3);
assign sorted_F_3_24_fu_2045_p3 = ((sel_tmp17_fu_2040_p2)? sorted_F_3_reg_572: F_q0);
assign sorted_F_3_2_fu_2071_p3 = ((sel_tmp19_fu_2066_p2)? sorted_F_3_reg_572: sorted_F_3_1_fu_2058_p3);
assign sorted_F_3_3_fu_2079_p3 = ((sel_tmp17_fu_2040_p2)? F_q0: sorted_F_2_reg_584);
assign sorted_F_3_4_fu_2087_p3 = ((sel_tmp18_fu_2053_p2)? sorted_F_2_reg_584: sorted_F_3_3_fu_2079_p3);
assign sorted_F_3_5_fu_2095_p3 = ((sel_tmp19_fu_2066_p2)? sorted_F_2_reg_584: sorted_F_3_4_fu_2087_p3);
assign sorted_F_3_7_fu_2103_p3 = ((sel_tmp18_fu_2053_p2)? F_q0: sorted_F_3_6_reg_596);
assign sorted_F_3_8_fu_2111_p3 = ((sel_tmp19_fu_2066_p2)? sorted_F_3_6_reg_596: sorted_F_3_7_fu_2103_p3);
assign sorted_weight_0_10_fu_2786_p3 = ((sel_tmp35_fu_2674_p2)? sorted_weight_1_7_reg_893: sorted_weight_0_9_fu_2779_p3);
assign sorted_weight_0_15_fu_2794_p3 = ((sel_tmp35_fu_2674_p2)? sorted_weight_3_20_reg_3525: sorted_weight_0_14_reg_771);
assign sorted_weight_0_1_fu_2949_p3 = ((sel_tmp26_fu_2943_p2)? sorted_weight_2_2_reg_749: sorted_weight_0_fu_2935_p3);
assign sorted_weight_0_2_fu_2963_p3 = ((sel_tmp27_fu_2957_p2)? sorted_weight_0_14_reg_771: sorted_weight_0_1_fu_2949_p3);
assign sorted_weight_0_3_fu_2733_p3 = ((sel_tmp33_fu_2647_p2)? sorted_weight_3_3_31_reg_871: sorted_weight_3_20_reg_3525);
assign sorted_weight_0_4_fu_2740_p3 = ((sel_tmp34_fu_2660_p2)? sorted_weight_3_3_31_reg_871: sorted_weight_0_3_fu_2733_p3);
assign sorted_weight_0_5_fu_2748_p3 = ((sel_tmp35_fu_2674_p2)? sorted_weight_3_3_31_reg_871: sorted_weight_0_4_fu_2740_p3);
assign sorted_weight_0_6_fu_2756_p3 = ((sel_tmp33_fu_2647_p2)? sorted_weight_3_20_reg_3525: sorted_weight_2_3_reg_882);
assign sorted_weight_0_7_fu_2763_p3 = ((sel_tmp34_fu_2660_p2)? sorted_weight_2_3_reg_882: sorted_weight_0_6_fu_2756_p3);
assign sorted_weight_0_8_fu_2771_p3 = ((sel_tmp35_fu_2674_p2)? sorted_weight_2_3_reg_882: sorted_weight_0_7_fu_2763_p3);
assign sorted_weight_0_9_fu_2779_p3 = ((sel_tmp34_fu_2660_p2)? sorted_weight_3_20_reg_3525: sorted_weight_1_7_reg_893);
assign sorted_weight_0_fu_2935_p3 = ((sel_tmp25_fu_2929_p2)? sorted_weight_1_2_reg_760: sorted_weight_3_2_27_reg_738);
assign sorted_weight_1_2_34_fu_2563_p3 = ((sel_tmp29_fu_2462_p2)? sorted_weight_2_3_reg_882: sorted_weight_1_fu_2555_p3);
assign sorted_weight_1_4_fu_2571_p3 = ((sel_tmp29_fu_2462_p2)? sorted_weight_3_21_fu_2531_p3: sorted_weight_1_7_reg_893);
assign sorted_weight_1_fu_2555_p3 = ((sel_tmp28_fu_2448_p2)? sorted_weight_3_21_fu_2531_p3: sorted_weight_2_3_reg_882);
assign sorted_weight_3_11_fu_2236_p3 = ((sel_tmp22_fu_2183_p2)? weight_q0: sorted_weight_3_9_reg_667);
assign sorted_weight_3_12_fu_2286_p3 = ((sel_tmp23_fu_2258_p2)? sorted_weight_2_2_reg_749: sorted_weight_3_2_27_reg_738);
assign sorted_weight_3_14_fu_2505_p3 = ((sel_tmp30_fu_2500_p2)? sorted_weight_1_7_reg_893: sorted_weight_3_3_31_reg_871);
assign sorted_weight_3_15_fu_2518_p3 = ((sel_tmp31_fu_2513_p2)? sorted_weight_2_3_reg_882: sorted_weight_3_14_fu_2505_p3);
assign sorted_weight_3_17_fu_2539_p3 = ((sel_tmp28_fu_2448_p2)? sorted_weight_3_3_31_reg_871: sorted_weight_3_21_fu_2531_p3);
assign sorted_weight_3_18_fu_2547_p3 = ((sel_tmp29_fu_2462_p2)? sorted_weight_3_3_31_reg_871: sorted_weight_3_17_fu_2539_p3);
assign sorted_weight_3_1_fu_2175_p3 = ((sel_tmp21_fu_2170_p2)? sorted_weight_3_reg_631: sorted_weight_3_26_fu_2162_p3);
assign sorted_weight_3_20_fu_2294_p3 = ((sel_tmp24_fu_2272_p2)? sorted_weight_1_2_reg_760: sorted_weight_3_12_fu_2286_p3);
assign sorted_weight_3_21_fu_2531_p3 = ((sel_tmp32_fu_2526_p2)? sorted_weight_0_14_reg_771: sorted_weight_3_15_fu_2518_p3);
assign sorted_weight_3_26_fu_2162_p3 = ((sel_tmp20_fu_2157_p2)? sorted_weight_3_reg_631: weight_q0);
assign sorted_weight_3_2_fu_2188_p3 = ((sel_tmp22_fu_2183_p2)? sorted_weight_3_reg_631: sorted_weight_3_1_fu_2175_p3);
assign sorted_weight_3_3_fu_2196_p3 = ((sel_tmp20_fu_2157_p2)? weight_q0: sorted_weight_2_reg_643);
assign sorted_weight_3_4_fu_2204_p3 = ((sel_tmp21_fu_2170_p2)? sorted_weight_2_reg_643: sorted_weight_3_3_fu_2196_p3);
assign sorted_weight_3_5_fu_2212_p3 = ((sel_tmp22_fu_2183_p2)? sorted_weight_2_reg_643: sorted_weight_3_4_fu_2204_p3);
assign sorted_weight_3_7_fu_2220_p3 = ((sel_tmp21_fu_2170_p2)? weight_q0: sorted_weight_3_6_reg_655);
assign sorted_weight_3_8_fu_2228_p3 = ((sel_tmp22_fu_2183_p2)? sorted_weight_3_6_reg_655: sorted_weight_3_7_fu_2220_p3);
assign tmp_100_fu_1722_p1 = max_F_to_int_fu_1708_p1[22:0];
assign tmp_101_fu_1788_p1 = min_F_to_int_fu_1774_p1[22:0];
assign tmp_102_fu_1934_p1 = matchsumtot_to_int_fu_1920_p1[22:0];
assign tmp_103_fu_2036_p1 = i_reg_620[1:0];
assign tmp_104_fu_2153_p1 = i4_reg_679[1:0];
assign tmp_105_fu_2254_p1 = i6_reg_826[1:0];
assign tmp_106_fu_2332_p1 = sorted_F_0_1_to_int_fu_2318_p1[22:0];
assign tmp_107_fu_2911_p3 = ind_reg_977[ap_const_lv32_2];
assign tmp_108_fu_2382_p1 = j_5_fu_2376_p2[1:0];
assign tmp_109_fu_2925_p1 = ind_reg_977[1:0];
assign tmp_110_fu_3024_p1 = B_1_to_int_fu_3010_p1[22:0];
assign tmp_111_fu_2400_p1 = sorted_F_1_to_int_fu_2386_p1[22:0];
assign tmp_112_fu_2444_p1 = j5_0_in_reg_937[1:0];
assign tmp_113_fu_2643_p1 = j5_0_in_reg_937[1:0];
assign tmp_11_fu_1694_p4 = {{max_F_1_to_int_fu_1691_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_13_fu_1712_p4 = {{max_F_to_int_fu_1708_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_15_fu_1738_p2 = (notrhs6_fu_1732_p2 | notlhs5_fu_1726_p2);
assign tmp_16_fu_1756_p2 = (notrhs8_fu_1750_p2 | notlhs7_fu_1744_p2);
assign tmp_17_fu_1762_p2 = (tmp_15_fu_1738_p2 & tmp_16_fu_1756_p2);
assign tmp_19_fu_1768_p2 = (tmp_17_fu_1762_p2 & grp_fu_1040_p2);
assign tmp_1_fu_1408_p4 = {{tmp_28_to_int_fu_1405_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign tmp_1_i_i_cast_fu_1298_p1 = $signed(tmp_1_i_i_fu_1292_p2);
assign tmp_1_i_i_fu_1292_p2 = (ap_const_lv8_7F - loc_V_fu_1248_p4);
assign tmp_20_fu_1188_p1 = pixel;
assign tmp_22_fu_1395_p1 = j_reg_479;
assign tmp_23_trn_cast_fu_1219_p1 = j_reg_479;
assign tmp_24_fu_1037_p0 = tmp_i_reg_3188;
assign tmp_27_fu_1192_p3 = {{pos_r}, {ap_const_lv2_0}};
assign tmp_28_to_int_fu_1405_p1 = tmp_23_reg_3210;
assign tmp_29_fu_1606_p1 = max_val_2_reg_491;
assign tmp_2_i_i_fu_1318_p1 = $unsigned(sh_assign_1_cast_fu_1310_p1);
assign tmp_30_fu_1778_p4 = {{min_F_to_int_fu_1774_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_31_fu_1228_p1 = p_addr7_fu_1223_p2;
assign tmp_31_to_int_fu_1422_p1 = tmp_25_reg_3216;
assign tmp_32_fu_1342_p1 = tmp_63_fu_1334_p3;
assign tmp_33_fu_1978_p1 = $signed(max_val_reg_514);
assign tmp_3_fu_1425_p4 = {{tmp_31_to_int_fu_1422_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign tmp_3_i_i_fu_1322_p2 = p_Result_1_fu_1262_p3 >> sh_assign_1_cast_cast_fu_1314_p1;
assign tmp_40_fu_1346_p4 = {{tmp_5_i_i_fu_1328_p2[ap_const_lv32_36 : ap_const_lv32_17]}};
assign tmp_41_fu_1804_p2 = (notrhs2_fu_1798_p2 | notlhs1_fu_1792_p2);
assign tmp_47_fu_1971_p2 = (matchsum_q0 + ap_const_lv8_1);
assign tmp_49_fu_1810_p2 = (tmp_15_fu_1738_p2 & tmp_41_fu_1804_p2);
assign tmp_50_fu_2003_p2 = (j2_cast_fu_1983_p1 == max_val_reg_514? 1'b1: 1'b0);
assign tmp_51_fu_1045_opcode = ap_const_lv5_4;
assign tmp_51_fu_1045_p0 = max_F_4_reg_3304;
assign tmp_51_fu_1045_p1 = min_F_reg_526;
assign tmp_52_fu_1903_p2 = (j3_cast_fu_1883_p1 == min_val_reg_502? 1'b1: 1'b0);
assign tmp_53_fu_1816_p2 = (tmp_49_fu_1810_p2 & tmp_51_fu_1045_p2);
assign tmp_54_fu_1683_p1 = $signed(p_addr4_fu_1678_p2);
assign tmp_56_fu_2031_p1 = i_reg_620;
assign tmp_58_fu_1871_p1 = $signed(p_addr1_fu_1866_p2);
assign tmp_59_fu_1924_p4 = {{matchsumtot_to_int_fu_1920_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_5_fu_1451_p2 = (notrhs_fu_1445_p2 | notlhs_fu_1439_p2);
assign tmp_5_i_i_fu_1328_p2 = tmp_i_i_fu_1270_p1 << tmp_2_i_i_fu_1318_p1;
assign tmp_61_fu_1962_p1 = matchsum_load_1_reg_3381;
assign tmp_63_fu_1334_p3 = tmp_3_i_i_fu_1322_p2[ap_const_lv32_17];
assign tmp_63_trn_cast_fu_2139_p1 = i4_reg_679;
assign tmp_64_fu_1418_p1 = tmp_28_to_int_fu_1405_p1[51:0];
assign tmp_65_fu_1950_p2 = (notrhs3_fu_1944_p2 | notlhs2_fu_1938_p2);
assign tmp_66_fu_1435_p1 = tmp_31_to_int_fu_1422_p1[51:0];
assign tmp_68_fu_2433_p2 = ($signed(j5_0_in_reg_937) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_69_fu_2439_p2 = (tmp_88_reg_3558 & tmp_68_fu_2433_p2);
assign tmp_6_fu_1469_p2 = (notrhs4_fu_1463_p2 | notlhs3_fu_1457_p2);
assign tmp_70_fu_1956_p2 = (tmp_65_fu_1950_p2 & grp_fu_1040_p2);
assign tmp_71_fu_1401_p1 = j_reg_479[1:0];
assign tmp_72_fu_2014_p1 = p_addr2_fu_2009_p2;
assign tmp_73_fu_1914_p1 = p_addr5_fu_1909_p2;
assign tmp_74_fu_2148_p1 = p_addr8_fu_2143_p2;
assign tmp_75_fu_3014_p4 = {{B_1_to_int_fu_3010_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_76_fu_1657_p4 = {{max_val_reg_514[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_77_fu_3040_p2 = (notrhs5_fu_3034_p2 | notlhs4_fu_3028_p2);
assign tmp_79_fu_3046_p2 = (tmp_77_fu_3040_p2 & grp_fu_1040_p2);
assign tmp_7_fu_1475_p2 = (tmp_5_fu_1451_p2 & tmp_6_fu_1469_p2);
assign tmp_80_fu_2322_p4 = {{sorted_F_0_1_to_int_fu_2318_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_81_fu_1611_p1 = max_val_2_reg_491[1:0];
assign tmp_82_fu_2390_p4 = {{sorted_F_1_to_int_fu_2386_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_83_fu_1704_p1 = max_F_1_to_int_fu_1691_p1[22:0];
assign tmp_84_fu_2348_p2 = (notrhs7_fu_2342_p2 | notlhs6_fu_2336_p2);
assign tmp_85_fu_2416_p2 = (notrhs9_fu_2410_p2 | notlhs8_fu_2404_p2);
assign tmp_86_fu_2422_p2 = (tmp_84_reg_3541 & tmp_85_fu_2416_p2);
assign tmp_88_fu_2427_p2 = (tmp_86_fu_2422_p2 & grp_fu_1040_p2);
assign tmp_89_fu_2354_p1 = tmp_27_reg_3121;
assign tmp_8_fu_1063_opcode = ap_const_lv5_4;
assign tmp_8_fu_1063_p0 = tmp_23_reg_3210;
assign tmp_8_fu_1063_p1 = tmp_25_reg_3216;
assign tmp_90_fu_2358_p2 = (tmp_27_reg_3121 | ap_const_lv19_1);
assign tmp_91_fu_2371_p1 = p_addr9_fu_2363_p3;
assign tmp_92_fu_2875_p2 = (tmp_27_reg_3121 | ap_const_lv19_2);
assign tmp_93_fu_2888_p1 = p_addr_fu_2880_p3;
assign tmp_94_fu_2893_p2 = (tmp_27_reg_3121 | ap_const_lv19_3);
assign tmp_95_fu_2906_p1 = p_addr3_fu_2898_p3;
assign tmp_96_fu_3006_p1 = $signed(p_addr10_reg_3690);
assign tmp_9_fu_1481_p2 = (tmp_7_fu_1475_p2 & tmp_8_fu_1063_p2);
assign tmp_fu_1542_p2 = (not_sel_tmp_fu_1519_p2 & not_sel_tmp1_fu_1536_p2);
assign tmp_i_i_fu_1270_p1 = p_Result_1_fu_1262_p3;
assign tmp_i_i_i_cast_fu_1274_p1 = loc_V_fu_1248_p4;
assign tmp_s_fu_1170_p2 = (invdar_reg_428 == ap_const_lv2_3? 1'b1: 1'b0);
assign weight_addr_6_gep_fu_342_p3 = tmp_58_reg_3349;
always @ (posedge ap_clk)
begin
    reg_1103[31:0] <= 32'b00111011100000110001001001101111;
    tmp_27_reg_3121[1:0] <= 2'b00;
    p_addr6_reg_3129[1:0] <= 2'b00;
    p_addr6_reg_3129[31:19] <= 13'b0000000000000;
    p_addr6_cast_reg_3136[1:0] <= 2'b00;
    p_addr6_cast_reg_3136[19] <= 1'b0;
    max_val_3_cast_reg_3247[31:3] <= 29'b00000000000000000000000000000;
end



endmodule //backsub_EM_ALGO

